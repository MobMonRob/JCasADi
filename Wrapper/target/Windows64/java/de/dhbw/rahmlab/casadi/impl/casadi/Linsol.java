/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

public class Linsol implements ISharedObject {
  private final long swigCPtr;

  public Linsol(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, Linsol::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected Linsol(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(Linsol obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_Linsol(swigCPtr);
}

  public long ISharedObject_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_ISharedObject_GetInterfaceCPtr(swigCPtr);
  }

  public static String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_type_name();
  }

  public Linsol() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Linsol__SWIG_0(), true);
  }

  public Linsol(String name, String solver, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Linsol__SWIG_1(name, solver, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public Linsol(String name, String solver, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Linsol__SWIG_2(name, solver, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static boolean has_plugin(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_has_plugin(name);
  }

  public static void load_plugin(String name) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_load_plugin(name);
  }

  public static String doc(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_doc(name);
  }

  public String plugin_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_plugin_name(swigCPtr, this);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sparsity() {
	final long cPtr = de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_sparsity(swigCPtr, this);
	if (cPtr == 0) return null;
	// false here indicates no ownership transfer to java
	de.dhbw.rahmlab.casadi.impl.casadi.Sparsity proxy = new de.dhbw.rahmlab.casadi.impl.casadi.Sparsity(cPtr, false);
	// public void extend(final Object toBeExtendedLifeTime, final Object extendedToLifeTime)
	LIFE_TIME_EXTENDER.extend(this, proxy);
	return proxy;
}

  public void sfact(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_sfact(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A);
  }

  public void nfact(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_nfact(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DM solve(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM B, boolean tr) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_solve__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(B), B, tr), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DM solve(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM B) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_solve__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(B), B), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.MX solve(de.dhbw.rahmlab.casadi.impl.casadi.MX A, de.dhbw.rahmlab.casadi.impl.casadi.MX B, boolean tr) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_solve__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(B), B, tr), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.MX solve(de.dhbw.rahmlab.casadi.impl.casadi.MX A, de.dhbw.rahmlab.casadi.impl.casadi.MX B) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_solve__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(B), B), true);
  }

  public long neig(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_neig(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A);
  }

  public long rank(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_rank(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A);
  }

  public de.dhbw.rahmlab.casadi.impl.std.Dict stats(int mem) {
    return new de.dhbw.rahmlab.casadi.impl.std.Dict(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_stats__SWIG_0(swigCPtr, this, mem), true);
  }

  public de.dhbw.rahmlab.casadi.impl.std.Dict stats() {
    return new de.dhbw.rahmlab.casadi.impl.std.Dict(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_stats__SWIG_1(swigCPtr, this), true);
  }

  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_toString__SWIG_0(swigCPtr, this, more);
  }

  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Linsol_toString__SWIG_1(swigCPtr, this);
  }

  public Linsol(de.dhbw.rahmlab.casadi.impl.casadi.Linsol other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Linsol__SWIG_3(de.dhbw.rahmlab.casadi.impl.casadi.Linsol.getCPtr(other), other), true);
  }

}
