/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.std;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

public class StdVectorCasadiGenericType extends java.util.AbstractList<de.dhbw.rahmlab.casadi.impl.casadi.GenericType> implements java.util.RandomAccess {
  private final long swigCPtr;

  public StdVectorCasadiGenericType(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, StdVectorCasadiGenericType::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected StdVectorCasadiGenericType(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(StdVectorCasadiGenericType obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_std_StdVectorCasadiGenericType(swigCPtr);
}

  public StdVectorCasadiGenericType(de.dhbw.rahmlab.casadi.impl.casadi.GenericType[] initialElements) {
    this();
    reserve(initialElements.length);

    for (de.dhbw.rahmlab.casadi.impl.casadi.GenericType element : initialElements) {
      add(element);
    }
  }

  public StdVectorCasadiGenericType(Iterable<de.dhbw.rahmlab.casadi.impl.casadi.GenericType> initialElements) {
    this();
    for (de.dhbw.rahmlab.casadi.impl.casadi.GenericType element : initialElements) {
      add(element);
    }
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.GenericType get(int index) {
    return doGet(index);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.GenericType set(int index, de.dhbw.rahmlab.casadi.impl.casadi.GenericType e) {
    return doSet(index, e);
  }

  public boolean add(de.dhbw.rahmlab.casadi.impl.casadi.GenericType e) {
    modCount++;
    doAdd(e);
    return true;
  }

  public void add(int index, de.dhbw.rahmlab.casadi.impl.casadi.GenericType e) {
    modCount++;
    doAdd(index, e);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.GenericType remove(int index) {
    modCount++;
    return doRemove(index);
  }

  protected void removeRange(int fromIndex, int toIndex) {
    modCount++;
    doRemoveRange(fromIndex, toIndex);
  }

  public int size() {
    return doSize();
  }

  public StdVectorCasadiGenericType() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_std_StdVectorCasadiGenericType__SWIG_0(), true);
  }

  public StdVectorCasadiGenericType(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiGenericType other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_std_StdVectorCasadiGenericType__SWIG_1(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiGenericType.getCPtr(other), other), true);
  }

  public long capacity() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_isEmpty(swigCPtr, this);
  }

  public void clear() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_clear(swigCPtr, this);
  }

  public StdVectorCasadiGenericType(int count, de.dhbw.rahmlab.casadi.impl.casadi.GenericType value) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_std_StdVectorCasadiGenericType__SWIG_2(count, de.dhbw.rahmlab.casadi.impl.casadi.GenericType.getCPtr(value), value), true);
  }

  private int doSize() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doSize(swigCPtr, this);
  }

  private void doAdd(de.dhbw.rahmlab.casadi.impl.casadi.GenericType x) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doAdd__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.GenericType.getCPtr(x), x);
  }

  private void doAdd(int index, de.dhbw.rahmlab.casadi.impl.casadi.GenericType x) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doAdd__SWIG_1(swigCPtr, this, index, de.dhbw.rahmlab.casadi.impl.casadi.GenericType.getCPtr(x), x);
  }

  private de.dhbw.rahmlab.casadi.impl.casadi.GenericType doRemove(int index) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.GenericType(de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doRemove(swigCPtr, this, index), true);
  }

  private de.dhbw.rahmlab.casadi.impl.casadi.GenericType doGet(int index) {
	final long cPtr = de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doGet(swigCPtr, this, index);
	if (cPtr == 0) return null;
	// false here indicates no ownership transfer to java
	de.dhbw.rahmlab.casadi.impl.casadi.GenericType proxy = new de.dhbw.rahmlab.casadi.impl.casadi.GenericType(cPtr, false);
	// public void extend(final Object toBeExtendedLifeTime, final Object extendedToLifeTime)
	LIFE_TIME_EXTENDER.extend(this, proxy);
	return proxy;
}

  private de.dhbw.rahmlab.casadi.impl.casadi.GenericType doSet(int index, de.dhbw.rahmlab.casadi.impl.casadi.GenericType val) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.GenericType(de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doSet(swigCPtr, this, index, de.dhbw.rahmlab.casadi.impl.casadi.GenericType.getCPtr(val), val), true);
  }

  private void doRemoveRange(int fromIndex, int toIndex) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.std_StdVectorCasadiGenericType_doRemoveRange(swigCPtr, this, fromIndex, toIndex);
  }

}
