/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 * <br>
 *  End of conditional comment. Sparse matrix class. SX and DM are specializations.<br>
 * <br>
 *       General sparse matrix class that is designed with the idea that "everything is a matrix",<br>
 *       that is, also scalars and vectors.<br>
 * <br>
 *       This philosophy makes it easy to use and to interface in particularly<br>
 *       with Python and Matlab/Octave.<br>
 * <br>
 * <br>
 *       Index starts with 0.<br>
 * <br>
 *       Index vec happens as follows: (rr, cc) -&gt; k = rr+cc*size1()<br>
 * <br>
 *       Vectors are column vectors.<br>
 * <br>
 * <br>
 *       The storage format is Compressed Column Storage (CCS), similar to that used for<br>
 *       sparse matrices in Matlab, <br>
 * <br>
 *       but unlike this format, we do allow for elements to be structurally non-zero<br>
 *       but numerically zero.<br>
 * <br>
 * <br>
 *       Matrix&lt;Scalar&gt; is polymorphic with a std::vector&lt;Scalar&gt; that contain<br>
 *       all non-identical-zero elements.<br>
 * <br>
 *       The sparsity can be accessed with Sparsity&amp; sparsity()<br>
 * <br>
 * <br>
 *       @author Joel Andersson<br>
 *       2010-2014<br>
 * <br>
 *       
 */
public class DM implements IDmGenericExpression, IDmGenericMatrix {
  private final long swigCPtr;

  public DM(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, DM::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected DM(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(DM obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_DM(swigCPtr);
}

  public long IDmGenericExpression_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_IDmGenericExpression_GetInterfaceCPtr(swigCPtr);
  }

  public long IDmGenericMatrix_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_IDmGenericMatrix_GetInterfaceCPtr(swigCPtr);
  }

  /**
   *  constructors<br>
   * <br>
   *         <br>
   *  empty 0-by-0 matrix constructor
   */
  public DM() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_0(), true);
  }

  /**
   *  Copy constructor
   */
  public DM(de.dhbw.rahmlab.casadi.impl.casadi.DM m) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m), true);
  }

  /**
   *  Create a sparse matrix with all structural zeros<br>
   * <br>
   *         
   */
  public DM(long nrow, long ncol) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_2(nrow, ncol), true);
  }

  /**
   *  Create a sparse matrix with all structural zeros<br>
   * <br>
   *         
   */
  public DM(SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_3(SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   *  Create a sparse matrix from a sparsity pattern.<br>
   * <br>
   *         Same as Matrix::ones(sparsity)<br>
   * <br>
   *         
   */
  public DM(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_4(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  /**
   *  Construct matrix with a given sparsity and nonzeros<br>
   * <br>
   *         
   */
  public DM(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, de.dhbw.rahmlab.casadi.impl.casadi.DM d) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_5(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(d), d), true);
  }

  /**
   *  This constructor enables implicit type conversion from a numeric type
   */
  public DM(double val) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_6(val), true);
  }

  /**
   *  Dense matrix constructor with data given as vector of vectors
   */
  public DM(de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDouble m) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_7(de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDouble.getCPtr(m), m), true);
  }

  /**
   *  Construct from a vector
   */
  public DM(de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble x) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_8(de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(x), x), true);
  }

  /**
   *  Convert to scalar type
   */
  public double scalar() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_scalar(swigCPtr, this);
  }

  /**
   *  Returns true if the matrix has a non-zero at location rr, cc
   */
  public boolean has_nz(long rr, long cc) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_has_nz(swigCPtr, this, rr, cc);
  }

  /**
   *  Returns the truth value of a Matrix
   */
  public boolean __nonzero__() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM___nonzero__(swigCPtr, this);
  }

  /**
   * <br>
   *  Get a submatrix, single argument
   */
  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice rr) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(rr), rr);
  }

  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM rr) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(rr), rr);
  }

  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp);
  }

  /**
   * <br>
   *  Get a submatrix, two arguments<br>
   * 
   */
  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(cc), cc);
  }

  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice rr, de.dhbw.rahmlab.casadi.impl.casadi.IM cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_4(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(cc), cc);
  }

  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_5(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(cc), cc);
  }

  public void get(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM rr, de.dhbw.rahmlab.casadi.impl.casadi.IM cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get__SWIG_6(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(cc), cc);
  }

  /**
   * <br>
   * <br>
   *  Set a submatrix, single argument
   */
  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice rr) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(rr), rr);
  }

  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM rr) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(rr), rr);
  }

  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp);
  }

  /**
   * <br>
   * <br>
   *  Set a submatrix, two arguments
   */
  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(cc), cc);
  }

  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice rr, de.dhbw.rahmlab.casadi.impl.casadi.IM cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_4(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(cc), cc);
  }

  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_5(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(cc), cc);
  }

  public void set(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM rr, de.dhbw.rahmlab.casadi.impl.casadi.IM cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set__SWIG_6(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(cc), cc);
  }

  /**
   * <br>
   * <br>
   *  Get a set of nonzeros
   */
  public void get_nz(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice k) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_nz__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(k), k);
  }

  public void get_nz(de.dhbw.rahmlab.casadi.impl.casadi.DM OUTPUT, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM k) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_nz__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(OUTPUT), OUTPUT, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(k), k);
  }

  /**
   * <br>
   * <br>
   *  Set a set of nonzeros
   */
  public void set_nz(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice k) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_nz__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(k), k);
  }

  public void set_nz(de.dhbw.rahmlab.casadi.impl.casadi.DM m, boolean ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM k) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_nz__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m, ind1, de.dhbw.rahmlab.casadi.impl.casadi.IM.getCPtr(k), k);
  }

  /**
   *  Conditional comment: INTERNAL<br>
   * Create nodes by their ID<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM binary(long op, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_binary(op, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM unary(long op, de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_unary(op, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM scalar_matrix(long op, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_scalar_matrix(op, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM matrix_scalar(long op, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_matrix_scalar(op, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM matrix_matrix(long op, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_matrix_matrix(op, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM call(de.dhbw.rahmlab.casadi.impl.casadi.Function f, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM x) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_call__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.Function.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble call(de.dhbw.rahmlab.casadi.impl.casadi.Function f, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble x) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_call__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.Function.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(x), x), true);
  }

  /**
   * <br>
   *  End of conditional comment.<br>
   *  Conditional comment: CLUTTER<br>
   * <br>
   *  Functions called by friend functions defined for GenericExpression
   */
  public static boolean is_equal(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y, long depth) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_equal__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y, depth);
  }

  /**
   * <br>
   *  End of conditional comment.<br>
   *  Conditional comment: CLUTTER<br>
   * <br>
   *  Functions called by friend functions defined for GenericExpression
   */
  public static boolean is_equal(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_equal__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mmin(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mmin(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mmax(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mmax(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined for GenericMatrix
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM simplify(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_simplify(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM jacobian(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_jacobian__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM jacobian(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_jacobian__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.Sparsity jacobian_sparsity(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Sparsity(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_jacobian_sparsity(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM hessian(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_hessian__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM hessian(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_hessian__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM hessian(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM g, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_hessian__SWIG_2(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(g), g, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM hessian(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM g) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_hessian__SWIG_3(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(g), g), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM substitute(de.dhbw.rahmlab.casadi.impl.casadi.DM ex, de.dhbw.rahmlab.casadi.impl.casadi.DM v, de.dhbw.rahmlab.casadi.impl.casadi.DM vdef) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_substitute__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(vdef), vdef), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM substitute(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM vdef) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_substitute__SWIG_1(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(vdef), vdef), true);
  }

  public static void substitute_inplace(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM vdef, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, boolean revers) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_substitute_inplace(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(vdef), vdef, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, revers);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM pinv(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_pinv__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM pinv(de.dhbw.rahmlab.casadi.impl.casadi.DM A, String lsolver, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_pinv__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, lsolver, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM expm_const(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM t) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_expm_const(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(t), t), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM expm(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_expm(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM solve(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM b) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_solve__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM solve(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM b, String lsolver, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_solve__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b, lsolver, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inv(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inv__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inv(de.dhbw.rahmlab.casadi.impl.casadi.DM A, String lsolver, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inv__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, lsolver, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static long n_nodes(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_n_nodes(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x);
  }

  public static String print_operator(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString args) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_operator(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(args), args);
  }

  public static void extract(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM vdef, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_extract__SWIG_0(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(vdef), vdef, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts);
  }

  public static void extract(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM vdef) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_extract__SWIG_1(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(vdef), vdef);
  }

  public static void shared(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM vdef, String v_prefix, String v_suffix) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_shared(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(vdef), vdef, v_prefix, v_suffix);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM _bilin(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM__bilin(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM _rank1(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM alpha, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM__rank1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(alpha), alpha, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM if_else(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM if_true, de.dhbw.rahmlab.casadi.impl.casadi.DM if_false, boolean short_circuit) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_if_else__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(if_true), if_true, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(if_false), if_false, short_circuit), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM if_else(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM if_true, de.dhbw.rahmlab.casadi.impl.casadi.DM if_false) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_if_else__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(if_true), if_true, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(if_false), if_false), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM conditional(de.dhbw.rahmlab.casadi.impl.casadi.DM ind, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM x, de.dhbw.rahmlab.casadi.impl.casadi.DM x_default, boolean short_circuit) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_conditional__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ind), ind, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x_default), x_default, short_circuit), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM conditional(de.dhbw.rahmlab.casadi.impl.casadi.DM ind, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM x, de.dhbw.rahmlab.casadi.impl.casadi.DM x_default) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_conditional__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ind), ind, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x_default), x_default), true);
  }

  public static boolean depends_on(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM arg) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_depends_on(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(arg), arg);
  }

  public static boolean contains_all(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM n) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_contains_all(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(n), n);
  }

  public static boolean contains_any(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM n) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_contains_any(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(n), n);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mrdivide(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mrdivide(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mldivide(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mldivide(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM symvar(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_symvar(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM det(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_det(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inv_minor(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inv_minor(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM trace(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_trace(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM norm_1(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_norm_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM norm_2(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_norm_2(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM norm_fro(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_norm_fro(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM norm_inf(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_norm_inf(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM sum2(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_sum2(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM sum1(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_sum1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM dot(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_dot(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM nullspace(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nullspace(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM diag(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_diag(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM unite(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM B) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_unite(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(B), B), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM project(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, boolean intersect) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_project__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, intersect), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM project(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_project__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM polyval(de.dhbw.rahmlab.casadi.impl.casadi.DM p, de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_polyval(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(p), p, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM densify(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM val) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_densify__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(val), val), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM densify(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_densify__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM einstein(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM B, de.dhbw.rahmlab.casadi.impl.casadi.DM C, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dim_a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dim_b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dim_c, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt c) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_einstein__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(B), B, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(C), C, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(dim_a), dim_a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(dim_b), dim_b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(dim_c), dim_c, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(b), b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(c), c), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM einstein(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM B, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dim_a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dim_b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dim_c, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt c) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_einstein__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(B), B, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(dim_a), dim_a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(dim_b), dim_b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(dim_c), dim_c, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(b), b, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(c), c), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM cumsum(de.dhbw.rahmlab.casadi.impl.casadi.DM x, long axis) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_cumsum__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, axis), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM cumsum(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_cumsum__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM _logsumexp(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM__logsumexp(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM cse(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM e) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_cse(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(e), e), true);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined for SparsityInterface
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM blockcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM v) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_blockcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM.getCPtr(v), v), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM horzcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_horzcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM horzsplit(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt offset) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_horzsplit__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(offset), offset), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM vertcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM v) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_vertcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(v), v), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM vertsplit(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt offset) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_vertsplit__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(offset), offset), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM diagsplit(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt offset1, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt offset2) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_diagsplit__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(offset1), offset1, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(offset2), offset2), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM reshape(de.dhbw.rahmlab.casadi.impl.casadi.DM x, long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reshape__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, nrow, ncol), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM reshape(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reshape__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM sparsity_cast(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_sparsity_cast(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM kron(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_kron(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mtimes(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mtimes__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mac(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y, de.dhbw.rahmlab.casadi.impl.casadi.DM z) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mac(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(z), z), true);
  }

  public static void extract_parametric(de.dhbw.rahmlab.casadi.impl.casadi.DM expr, de.dhbw.rahmlab.casadi.impl.casadi.DM par, de.dhbw.rahmlab.casadi.impl.casadi.DM expr_ret, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM symbols, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM parametric, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_extract_parametric(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(par), par, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr_ret), expr_ret, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(symbols), symbols, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(parametric), parametric, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts);
  }

  public static void separate_linear(de.dhbw.rahmlab.casadi.impl.casadi.DM expr, de.dhbw.rahmlab.casadi.impl.casadi.DM sym_lin, de.dhbw.rahmlab.casadi.impl.casadi.DM sym_const, de.dhbw.rahmlab.casadi.impl.casadi.DM expr_const, de.dhbw.rahmlab.casadi.impl.casadi.DM expr_lin, de.dhbw.rahmlab.casadi.impl.casadi.DM expr_nonlin) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_separate_linear(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(sym_lin), sym_lin, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(sym_const), sym_const, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr_const), expr_const, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr_lin), expr_lin, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr_nonlin), expr_nonlin);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined here
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM sparsify(de.dhbw.rahmlab.casadi.impl.casadi.DM x, double tol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_sparsify__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, tol), true);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined here
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM sparsify(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_sparsify__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static void expand(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM weights, de.dhbw.rahmlab.casadi.impl.casadi.DM terms) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_expand(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(weights), weights, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(terms), terms);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM pw_const(de.dhbw.rahmlab.casadi.impl.casadi.DM t, de.dhbw.rahmlab.casadi.impl.casadi.DM tval, de.dhbw.rahmlab.casadi.impl.casadi.DM val) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_pw_const(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(t), t, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(tval), tval, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(val), val), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM pw_lin(de.dhbw.rahmlab.casadi.impl.casadi.DM t, de.dhbw.rahmlab.casadi.impl.casadi.DM tval, de.dhbw.rahmlab.casadi.impl.casadi.DM val) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_pw_lin(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(t), t, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(tval), tval, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(val), val), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM heaviside(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_heaviside(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM rectangle(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rectangle(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM triangle(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_triangle(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM ramp(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_ramp(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM gauss_quadrature(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM a, de.dhbw.rahmlab.casadi.impl.casadi.DM b, long order) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_gauss_quadrature__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b, order), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM gauss_quadrature(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM a, de.dhbw.rahmlab.casadi.impl.casadi.DM b) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_gauss_quadrature__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM gauss_quadrature(de.dhbw.rahmlab.casadi.impl.casadi.DM f, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM a, de.dhbw.rahmlab.casadi.impl.casadi.DM b, long order, de.dhbw.rahmlab.casadi.impl.casadi.DM w) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_gauss_quadrature__SWIG_2(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b, order, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(w), w), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM forward(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM v, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_forward__SWIG_0(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM forward(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM v) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_forward__SWIG_1(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM.getCPtr(v), v), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM reverse(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM v, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reverse__SWIG_0(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM reverse(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM v) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reverse__SWIG_1(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorDM.getCPtr(v), v), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorBool which_depends(de.dhbw.rahmlab.casadi.impl.casadi.DM expr, de.dhbw.rahmlab.casadi.impl.casadi.DM var, long order, boolean tr) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorBool(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_which_depends__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(var), var, order, tr), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorBool which_depends(de.dhbw.rahmlab.casadi.impl.casadi.DM expr, de.dhbw.rahmlab.casadi.impl.casadi.DM var, long order) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorBool(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_which_depends__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(var), var, order), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorBool which_depends(de.dhbw.rahmlab.casadi.impl.casadi.DM expr, de.dhbw.rahmlab.casadi.impl.casadi.DM var) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorBool(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_which_depends__SWIG_2(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(var), var), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM taylor(de.dhbw.rahmlab.casadi.impl.casadi.DM ex, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM a, long order) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_taylor(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(a), a, order), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mtaylor(de.dhbw.rahmlab.casadi.impl.casadi.DM ex, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM a, long order) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mtaylor__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(a), a, order), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM mtaylor(de.dhbw.rahmlab.casadi.impl.casadi.DM ex, de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM a, long order, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt order_contributions) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_mtaylor__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(a), a, order, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(order_contributions), order_contributions), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM poly_coeff(de.dhbw.rahmlab.casadi.impl.casadi.DM ex, de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_poly_coeff(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM poly_roots(de.dhbw.rahmlab.casadi.impl.casadi.DM p) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_poly_roots(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(p), p), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM eig_symbolic(de.dhbw.rahmlab.casadi.impl.casadi.DM m) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_eig_symbolic(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM evalf(de.dhbw.rahmlab.casadi.impl.casadi.DM m) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_evalf(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(m), m), true);
  }

  public static void qr_sparse(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM V, de.dhbw.rahmlab.casadi.impl.casadi.DM R, de.dhbw.rahmlab.casadi.impl.casadi.DM beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt pc, boolean amd) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_qr_sparse__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(V), V, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(R), R, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(beta), beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(prinv), prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(pc), pc, amd);
  }

  public static void qr_sparse(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM V, de.dhbw.rahmlab.casadi.impl.casadi.DM R, de.dhbw.rahmlab.casadi.impl.casadi.DM beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt pc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_qr_sparse__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(V), V, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(R), R, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(beta), beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(prinv), prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(pc), pc);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM qr_solve(de.dhbw.rahmlab.casadi.impl.casadi.DM b, de.dhbw.rahmlab.casadi.impl.casadi.DM v, de.dhbw.rahmlab.casadi.impl.casadi.DM r, de.dhbw.rahmlab.casadi.impl.casadi.DM beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt pc, boolean tr) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_qr_solve__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(r), r, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(beta), beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(prinv), prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(pc), pc, tr), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM qr_solve(de.dhbw.rahmlab.casadi.impl.casadi.DM b, de.dhbw.rahmlab.casadi.impl.casadi.DM v, de.dhbw.rahmlab.casadi.impl.casadi.DM r, de.dhbw.rahmlab.casadi.impl.casadi.DM beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt pc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_qr_solve__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(r), r, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(beta), beta, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(prinv), prinv, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(pc), pc), true);
  }

  public static void qr(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM Q, de.dhbw.rahmlab.casadi.impl.casadi.DM R) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_qr(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(Q), Q, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(R), R);
  }

  public static void ldl(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM D, de.dhbw.rahmlab.casadi.impl.casadi.DM LT, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt p, boolean amd) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_ldl__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(D), D, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(LT), LT, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(p), p, amd);
  }

  public static void ldl(de.dhbw.rahmlab.casadi.impl.casadi.DM A, de.dhbw.rahmlab.casadi.impl.casadi.DM D, de.dhbw.rahmlab.casadi.impl.casadi.DM LT, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt p) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_ldl__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(D), D, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(LT), LT, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(p), p);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM ldl_solve(de.dhbw.rahmlab.casadi.impl.casadi.DM b, de.dhbw.rahmlab.casadi.impl.casadi.DM D, de.dhbw.rahmlab.casadi.impl.casadi.DM LT, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt p) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_ldl_solve(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(b), b, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(D), D, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(LT), LT, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(p), p), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM all(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_all(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM any(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_any(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM adj(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_adj(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM minor(de.dhbw.rahmlab.casadi.impl.casadi.DM x, long i, long j) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_minor(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, i, j), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM cofactor(de.dhbw.rahmlab.casadi.impl.casadi.DM A, long i, long j) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_cofactor(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A, i, j), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM chol(de.dhbw.rahmlab.casadi.impl.casadi.DM A) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_chol(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(A), A), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM norm_inf_mul(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_norm_inf_mul(de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM diagcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM A) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_diagcat(de.dhbw.rahmlab.casadi.impl.std.StdVectorDM.getCPtr(A), A), true);
  }

  /**
   * <br>
   *  End of conditional comment.
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM printme(de.dhbw.rahmlab.casadi.impl.casadi.DM y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_printme(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(y), y), true);
  }

  /**
   *  Transpose the matrix
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM T() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_T(swigCPtr, this), true);
  }

  /**
   *  Set or reset the depth to which equalities are being checked for simplifications<br>
   * <br>
   *         
   */
  public static void set_max_depth(long eq_depth) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_max_depth__SWIG_0(eq_depth);
  }

  /**
   *  Set or reset the depth to which equalities are being checked for simplifications<br>
   * <br>
   *         
   */
  public static void set_max_depth() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_max_depth__SWIG_1();
  }

  /**
   *  Get the depth to which equalities are being checked for simplifications<br>
   * <br>
   *         
   */
  public static long get_max_depth() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_max_depth();
  }

  /**
   *  Get function input<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM get_input(de.dhbw.rahmlab.casadi.impl.casadi.Function f) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_input(de.dhbw.rahmlab.casadi.impl.casadi.Function.getCPtr(f), f), true);
  }

  /**
   *  Get free<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorDM get_free(de.dhbw.rahmlab.casadi.impl.casadi.Function f) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_free(de.dhbw.rahmlab.casadi.impl.casadi.Function.getCPtr(f), f), true);
  }

  /**
   *  Get name of the class
   */
  public static String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_type_name();
  }

  /**
   *  Get strings corresponding to the nonzeros and the interdependencies
   */
  public void print_split(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString OUTPUT, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString arg1) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_split__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(OUTPUT), OUTPUT, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(arg1), arg1);
  }

  /**
   *  Print a representation of the object
   */
  public void disp(SWIGTYPE_p_std__ostream stream, boolean more) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_disp__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream), more);
  }

  /**
   *  Print a representation of the object
   */
  public void disp(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_disp__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Get string representation
   */
  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_toString__SWIG_0(swigCPtr, this, more);
  }

  /**
   *  Get string representation
   */
  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_toString__SWIG_1(swigCPtr, this);
  }

  /**
   *  Print scalar
   */
  public void print_scalar(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_scalar__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Print vector-style
   */
  public void print_vector(SWIGTYPE_p_std__ostream stream, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_vector__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream), truncate);
  }

  /**
   *  Print vector-style
   */
  public void print_vector(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_vector__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Print dense matrix-stype
   */
  public void print_dense(SWIGTYPE_p_std__ostream stream, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_dense__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream), truncate);
  }

  /**
   *  Print dense matrix-stype
   */
  public void print_dense(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_dense__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Print sparse matrix style
   */
  public void print_sparse(SWIGTYPE_p_std__ostream stream, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_sparse__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream), truncate);
  }

  /**
   *  Print sparse matrix style
   */
  public void print_sparse(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_sparse__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Print default style
   */
  public static void print_default(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_default__SWIG_0(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros), truncate);
  }

  /**
   *  Print default style
   */
  public static void print_default(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_default__SWIG_1(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros));
  }

  /**
   *  Print scalar
   */
  public static void print_scalar(SWIGTYPE_p_std__ostream stream, double e) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_scalar__SWIG_1(SWIGTYPE_p_std__ostream.getCPtr(stream), e);
  }

  /**
   *  Print vector-style
   */
  public static void print_vector(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_vector__SWIG_2(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros), truncate);
  }

  /**
   *  Print vector-style
   */
  public static void print_vector(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_vector__SWIG_3(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros));
  }

  /**
   *  Print canonical style
   */
  public static void print_canonical(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_canonical__SWIG_0(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros), truncate);
  }

  /**
   *  Print canonical style
   */
  public static void print_canonical(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_canonical__SWIG_1(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros));
  }

  /**
   *  Print scalar
   */
  public static void print_sparse(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_sparse__SWIG_2(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros), truncate);
  }

  /**
   *  Print scalar
   */
  public static void print_sparse(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_sparse__SWIG_3(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros));
  }

  /**
   *  Get strings corresponding to the nonzeros and the interdependencies
   */
  public static void print_split(long nnz, SWIGTYPE_p_double nonzeros, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString nz, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString inter) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_split__SWIG_1(nnz, SWIGTYPE_p_double.getCPtr(nonzeros), de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(nz), nz, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(inter), inter);
  }

  /**
   *  Print dense matrix-stype
   */
  public static void print_dense(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros, boolean truncate) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_dense__SWIG_2(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros), truncate);
  }

  /**
   *  Print dense matrix-stype
   */
  public static void print_dense(SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_print_dense__SWIG_3(SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros));
  }

  public void clear() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_clear(swigCPtr, this);
  }

  public void resize(long nrow, long ncol) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_resize(swigCPtr, this, nrow, ncol);
  }

  public void reserve(long nnz) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reserve__SWIG_0(swigCPtr, this, nnz);
  }

  public void reserve(long nnz, long ncol) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reserve__SWIG_1(swigCPtr, this, nnz, ncol);
  }

  /**
   *  Erase a submatrix (leaving structural zeros in its place)<br>
   * <br>
   *         Erase rows and/or columns of a matrix<br>
   * <br>
   *         
   */
  public void erase(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt cc, boolean ind1) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_erase__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(cc), cc, ind1);
  }

  /**
   *  Erase a submatrix (leaving structural zeros in its place)<br>
   * <br>
   *         Erase rows and/or columns of a matrix<br>
   * <br>
   *         
   */
  public void erase(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_erase__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(cc), cc);
  }

  /**
   *  Erase a submatrix (leaving structural zeros in its place)<br>
   * <br>
   *         Erase elements of a matrix<br>
   * <br>
   *         
   */
  public void erase(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr, boolean ind1) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_erase__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr, ind1);
  }

  /**
   *  Erase a submatrix (leaving structural zeros in its place)<br>
   * <br>
   *         Erase elements of a matrix<br>
   * <br>
   *         
   */
  public void erase(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_erase__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr);
  }

  /**
   *  Remove columns and rows<br>
   * <br>
   *         Remove/delete rows and/or columns of a matrix<br>
   * <br>
   *         
   */
  public void remove(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_remove(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(cc), cc);
  }

  /**
   *  Enlarge matrix<br>
   * <br>
   *         Make the matrix larger by inserting empty rows and columns,<br>
   *         keeping the existing non-zeros<br>
   * <br>
   *         
   */
  public void enlarge(long nrow, long ncol, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt cc, boolean ind1) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_enlarge__SWIG_0(swigCPtr, this, nrow, ncol, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(cc), cc, ind1);
  }

  /**
   *  Enlarge matrix<br>
   * <br>
   *         Make the matrix larger by inserting empty rows and columns,<br>
   *         keeping the existing non-zeros<br>
   * <br>
   *         
   */
  public void enlarge(long nrow, long ncol, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt cc) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_enlarge__SWIG_1(swigCPtr, this, nrow, ncol, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(rr), rr, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(cc), cc);
  }

  /**
   * <br>
   *  Access the non-zero elements
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble nonzeros() {
	final long cPtr = de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nonzeros__SWIG_0(swigCPtr, this);
	if (cPtr == 0) return null;
	// false here indicates no ownership transfer to java
	de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble proxy = new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(cPtr, false);
	// public void extend(final Object toBeExtendedLifeTime, final Object extendedToLifeTime)
	LIFE_TIME_EXTENDER.extend(this, proxy);
	return proxy;
}

  /**
   *  Get an owning reference to the sparsity pattern<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sparsity() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Sparsity(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_sparsity(swigCPtr, this), true);
  }

  /**
   *  Get an output<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM get_output(long oind) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_output(swigCPtr, this, oind), true);
  }

  /**
   *  Construct a sparse matrix from triplet form<br>
   * <br>
   * Default matrix size is max(col) x max(row)<br>
   * <br>
   *         <br>
   * 
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM triplet(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt row, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt col, de.dhbw.rahmlab.casadi.impl.casadi.DM d) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_triplet__SWIG_0(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(row), row, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(col), col, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(d), d), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM triplet(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt row, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt col, de.dhbw.rahmlab.casadi.impl.casadi.DM d, long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_triplet__SWIG_1(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(row), row, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(col), col, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(d), d, nrow, ncol), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM triplet(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt row, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt col, de.dhbw.rahmlab.casadi.impl.casadi.DM d, SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_triplet__SWIG_2(de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(row), row, de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt.getCPtr(col), col, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(d), d, SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   * <br>
   * create a matrix with all inf<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inf(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inf__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inf(long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inf__SWIG_1(nrow, ncol), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inf(long nrow) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inf__SWIG_2(nrow), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inf() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inf__SWIG_3(), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM inf(SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_inf__SWIG_4(SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   * <br>
   * create a matrix with all nan<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM nan(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nan__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM nan(long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nan__SWIG_1(nrow, ncol), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM nan(long nrow) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nan__SWIG_2(nrow), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM nan() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nan__SWIG_3(), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM nan(SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nan__SWIG_4(SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   * create an n-by-n identity matrix<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM eye(long n) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_eye(n), true);
  }

  /**
   *  Returns a number that is unique for a given symbolic scalar<br>
   * <br>
   * Only defined if symbolic scalar.<br>
   * <br>
   *         
   */
  public long element_hash() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_element_hash(swigCPtr, this);
  }

  /**
   *  Checks if expression does not contain NaN or Inf
   */
  public boolean is_regular() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_regular(swigCPtr, this);
  }

  /**
   *  Check if smooth<br>
   * <br>
   *         
   */
  public boolean is_smooth() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_smooth(swigCPtr, this);
  }

  /**
   *  Check if SX is a leaf of the SX graph<br>
   * <br>
   *         Only defined if symbolic scalar.<br>
   * <br>
   *         
   */
  public boolean is_leaf() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_leaf(swigCPtr, this);
  }

  /**
   *  Check whether a binary SX is commutative<br>
   * <br>
   *         Only defined if symbolic scalar.<br>
   * <br>
   *         
   */
  public boolean is_commutative() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_commutative(swigCPtr, this);
  }

  /**
   *  Check if symbolic (Dense)<br>
   * <br>
   *         Check if an expression is a pure symbol.<br>
   *         Pure means that no operations should happen on the symbol<br>
   *         (not even vec, transpose, index, concatenation, ...)<br>
   *         By consequence, a slice of a vector-shaped MX symbol is not a symbol.<br>
   *         However, the SX type is really a container format with scalar entries.<br>
   *         Therefore, a slice of a vector-shaped SX symbol is still a symbol.<br>
   * <br>
   *         Sparse matrices invariable return false<br>
   * <br>
   *         is_valid_input<br>
   * <br>
   *         
   */
  public boolean is_symbolic() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_symbolic(swigCPtr, this);
  }

  /**
   *  Check if matrix can be used to define function inputs.<br>
   * <br>
   * <br>
   *         is_valid_input is more forgiving than is_symbolic.<br>
   *         Some compositions are allowed: vec, vertcat.<br>
   * <br>
   *         Sparse matrices can return true if all non-zero elements are symbolic<br>
   * <br>
   *         is_symbolic<br>
   * <br>
   *         
   */
  public boolean is_valid_input() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_valid_input(swigCPtr, this);
  }

  /**
   *  Conditional comment: INTERNAL Detect duplicate symbolic expressions<br>
   * <br>
   *         If there are symbolic primitives appearing more than once, the function will return<br>
   *         true and the names of the duplicate expressions will be passed to casadi_warning.<br>
   *         Note: Will mark the node using SXElem::set_temp.<br>
   *         Make sure to call reset_input() after usage.<br>
   * <br>
   *         
   */
  public boolean has_duplicates() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_has_duplicates(swigCPtr, this);
  }

  /**
   *  Reset the marker for an input expression<br>
   * <br>
   *         
   */
  public void reset_input() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_reset_input(swigCPtr, this);
  }

  /**
   *  End of conditional comment. Check if the matrix is constant (note that false negative answers are possible)<br>
   * <br>
   *         
   */
  public boolean is_constant() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_constant(swigCPtr, this);
  }

  /**
   *  Check if function call<br>
   * <br>
   *         
   */
  public boolean is_call() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_call(swigCPtr, this);
  }

  /**
   *  Check if evaluation output<br>
   * <br>
   *         
   */
  public boolean is_output() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_output(swigCPtr, this);
  }

  /**
   *  Check if a multiple output node<br>
   * <br>
   *         
   */
  public boolean has_output() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_has_output(swigCPtr, this);
  }

  /**
   *  Get the index of evaluation output - only valid when is_output() is true<br>
   * <br>
   *         
   */
  public long which_output() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_which_output(swigCPtr, this);
  }

  /**
   *  Get function - only valid when is_call() is true<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function which_function() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_which_function(swigCPtr, this), true);
  }

  /**
   *  Check if the matrix is integer-valued<br>
   * <br>
   * (note that false negative answers are possible)<br>
   * <br>
   *         
   */
  public boolean is_integer() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_integer(swigCPtr, this);
  }

  /**
   *  check if the matrix is 0 (note that false negative answers are possible)<br>
   * <br>
   *         
   */
  public boolean is_zero() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_zero(swigCPtr, this);
  }

  /**
   *  check if the matrix is 1 (note that false negative answers are possible)<br>
   * <br>
   *         
   */
  public boolean is_one() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_one(swigCPtr, this);
  }

  /**
   *  check if the matrix is -1 (note that false negative answers are possible)<br>
   * <br>
   *         
   */
  public boolean is_minus_one() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_minus_one(swigCPtr, this);
  }

  /**
   *  check if the matrix is an identity matrix (note that false negative answers<br>
   * <br>
   * are possible)<br>
   * <br>
   *         
   */
  public boolean is_eye() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_eye(swigCPtr, this);
  }

  /**
   *  Get operation type
   */
  public long op() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_op(swigCPtr, this);
  }

  /**
   *  Is it a certain operation
   */
  public boolean is_op(long op) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_op(swigCPtr, this, op);
  }

  /**
   *  Check if the matrix has any zero entries which are not structural zeros<br>
   * <br>
   *         
   */
  public boolean has_zeros() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_has_zeros(swigCPtr, this);
  }

  /**
   *  Get all nonzeros<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble get_nonzeros() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_nonzeros(swigCPtr, this), true);
  }

  /**
   *  Get all elements<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble get_elements() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_elements(swigCPtr, this), true);
  }

  /**
   *  Get name (only if symbolic scalar)<br>
   * <br>
   *         
   */
  public String name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_name(swigCPtr, this);
  }

  /**
   *  Get expressions of the children of the expression<br>
   * <br>
   *         Only defined if symbolic scalar.<br>
   *         Wraps SXElem SXElem::dep(casadi_int ch=0) const.<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM dep(long ch) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_dep__SWIG_0(swigCPtr, this, ch), true);
  }

  /**
   *  Get expressions of the children of the expression<br>
   * <br>
   *         Only defined if symbolic scalar.<br>
   *         Wraps SXElem SXElem::dep(casadi_int ch=0) const.<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM dep() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_dep__SWIG_1(swigCPtr, this), true);
  }

  /**
   *  Get the number of dependencies of a binary SXElem<br>
   * <br>
   *         Only defined if symbolic scalar.<br>
   * <br>
   *         
   */
  public long n_dep() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_n_dep(swigCPtr, this);
  }

  /**
   *  Set the 'precision, width &amp; scientific' used in printing and serializing to streams
   */
  public static void set_precision(long precision) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_precision(precision);
  }

  public static void set_width(long width) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_width(width);
  }

  public static void set_scientific(boolean scientific) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_set_scientific(scientific);
  }

  /**
   *  Seed the random number generator
   */
  public static void rng(long seed) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rng(seed);
  }

  /**
   * Create a matrix with uniformly distributed random numbers<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM rand(long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rand__SWIG_0(nrow, ncol), true);
  }

  /**
   * Create a matrix with uniformly distributed random numbers<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM rand(long nrow) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rand__SWIG_1(nrow), true);
  }

  /**
   * Create a matrix with uniformly distributed random numbers<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM rand() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rand__SWIG_2(), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM rand(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rand__SWIG_3(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM rand(SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rand__SWIG_4(SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   * Export matrix in specific language<br>
   * <br>
   * lang: only 'matlab' supported for now<br>
   * {@literal 
  options:
    inline: Indicates if you want everything on a single line (default: False)
    name: Name of exported variable (default: 'm')
    indent_level: Level of indentation (default: 0)
    spoof_zero: Replace numerical zero by a 1e-200 (default: false)
                might be needed for matlab sparse construct,
                which doesn't allow numerical zero
  }<br>
   * <br>
   *         
   */
  public void export_code(String lang, SWIGTYPE_p_std__ostream stream, de.dhbw.rahmlab.casadi.impl.std.Dict options) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_export_code__SWIG_0(swigCPtr, this, lang, SWIGTYPE_p_std__ostream.getCPtr(stream), de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(options), options);
  }

  /**
   * Export matrix in specific language<br>
   * <br>
   * lang: only 'matlab' supported for now<br>
   * {@literal 
  options:
    inline: Indicates if you want everything on a single line (default: False)
    name: Name of exported variable (default: 'm')
    indent_level: Level of indentation (default: 0)
    spoof_zero: Replace numerical zero by a 1e-200 (default: false)
                might be needed for matlab sparse construct,
                which doesn't allow numerical zero
  }<br>
   * <br>
   *         
   */
  public void export_code(String lang, SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_export_code__SWIG_1(swigCPtr, this, lang, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   * Export matrix in specific language<br>
   * <br>
   * lang: only 'matlab' supported for now<br>
   * {@literal 
  options:
    inline: Indicates if you want everything on a single line (default: False)
    name: Name of exported variable (default: 'm')
    indent_level: Level of indentation (default: 0)
    spoof_zero: Replace numerical zero by a 1e-200 (default: false)
                might be needed for matlab sparse construct,
                which doesn't allow numerical zero
  }<br>
   * <br>
   *         
   */
  public void export_code(String lang) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_export_code__SWIG_2(swigCPtr, this, lang);
  }

  /**
   *  Obtain information about sparsity 
   */
  public de.dhbw.rahmlab.casadi.impl.std.Dict info() {
    return new de.dhbw.rahmlab.casadi.impl.std.Dict(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_info(swigCPtr, this), true);
  }

  /**
   *  Serialize an object<br>
   * <br>
   *             
   */
  public void serialize(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_serialize__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Serialize<br>
   * <br>
   *         
   */
  public String serialize() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_serialize__SWIG_1(swigCPtr, this);
  }

  /**
   *  Build Sparsity from serialization<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM deserialize(SWIGTYPE_p_std__istream stream) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_deserialize__SWIG_0(SWIGTYPE_p_std__istream.getCPtr(stream)), true);
  }

  /**
   *  Build Sparsity from serialization<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM deserialize(String s) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_deserialize__SWIG_1(s), true);
  }

  /**
   *  Serialize an object<br>
   * <br>
   *         
   */
  public void serialize(SWIGTYPE_p_casadi__SerializingStream s) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_serialize__SWIG_2(swigCPtr, this, SWIGTYPE_p_casadi__SerializingStream.getCPtr(s));
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM deserialize(SWIGTYPE_p_casadi__DeserializingStream s) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_deserialize__SWIG_2(SWIGTYPE_p_casadi__DeserializingStream.getCPtr(s)), true);
  }

  /**
   *  Export numerical matrix to file<br>
   * <br>
   * Supported formats:<br>
   * <br>
   * {@literal 
    - .mtx   Matrix Market (sparse)
    - .txt   Ascii full precision representation (sparse)
             Whitespace separated, aligned.
             Comments with # % or /
             Uses C locale
             Structural zeros represented by 00
             Does not scale well for large sparse matrices
  }
   */
  public void to_file(String filename, String format) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_to_file__SWIG_0(swigCPtr, this, filename, format);
  }

  /**
   *  Export numerical matrix to file<br>
   * <br>
   * Supported formats:<br>
   * <br>
   * {@literal 
    - .mtx   Matrix Market (sparse)
    - .txt   Ascii full precision representation (sparse)
             Whitespace separated, aligned.
             Comments with # % or /
             Uses C locale
             Structural zeros represented by 00
             Does not scale well for large sparse matrices
  }
   */
  public void to_file(String filename) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_to_file__SWIG_1(swigCPtr, this, filename);
  }

  public static void to_file(String filename, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros, String format) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_to_file__SWIG_2(filename, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros), format);
  }

  public static void to_file(String filename, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, SWIGTYPE_p_double nonzeros) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_to_file__SWIG_3(filename, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, SWIGTYPE_p_double.getCPtr(nonzeros));
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM from_file(String filename, String format_hint) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_from_file__SWIG_0(filename, format_hint), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.DM from_file(String filename) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_from_file__SWIG_1(filename), true);
  }

  /**
   *  Sparse matrix with a given sparsity with all values same
   */
  public DM(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, double val, boolean dummy) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_9(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, val, dummy), true);
  }

  /**
   *  Sparse matrix with a given sparsity and non-zero elements.
   */
  public DM(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble d, boolean dummy) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DM__SWIG_10(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(d), d, dummy), true);
  }

  /**
   *  Conditional comment: INTERNAL
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.DM _sym(String name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM__sym(name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DmSubIndex at(int rr) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DmSubIndex(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_at__SWIG_0(swigCPtr, this, rr), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DmSubMatrix at(int rr, int cc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DmSubMatrix(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_at__SWIG_1(swigCPtr, this, rr, cc), true);
  }

  public void assign(de.dhbw.rahmlab.casadi.impl.casadi.DM other) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_assign(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(other), other);
  }

  /**
   *  Get the number of (structural) non-zero elements<br>
   * <br>
   *         
   */
  public long nnz_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nnz_(swigCPtr, this);
  }

  /**
   *  Get the number of non-zeros in the lower triangular half<br>
   * <br>
   *         
   */
  public long nnz_lower_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nnz_lower_(swigCPtr, this);
  }

  /**
   *  Get the number of non-zeros in the upper triangular half<br>
   * <br>
   *         
   */
  public long nnz_upper_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nnz_upper_(swigCPtr, this);
  }

  /**
   *  Get get the number of non-zeros on the diagonal<br>
   * <br>
   *         
   */
  public long nnz_diag() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_nnz_diag(swigCPtr, this);
  }

  /**
   *  Get the number of elements<br>
   * <br>
   *         
   */
  public long numel_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_numel_(swigCPtr, this);
  }

  /**
   *  Get the first dimension (i.e. number of rows)<br>
   * <br>
   *         
   */
  public long size1_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_size1_(swigCPtr, this);
  }

  /**
   *  Get the number of rows, Octave-style syntax<br>
   * <br>
   *         
   */
  public long rows() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_rows(swigCPtr, this);
  }

  /**
   *  Get the second dimension (i.e. number of columns)<br>
   * <br>
   *         
   */
  public long size2_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_size2_(swigCPtr, this);
  }

  /**
   *  Get the number of columns, Octave-style syntax<br>
   * <br>
   *         
   */
  public long columns() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_columns(swigCPtr, this);
  }

  /**
   *  Get string representation of dimensions.<br>
   * <br>
   *         The representation is e.g. "4x5" or  "4x5,10nz"<br>
   * <br>
   *         
   */
  public String dim_(boolean with_nz) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_dim___SWIG_0(swigCPtr, this, with_nz);
  }

  /**
   *  Get string representation of dimensions.<br>
   * <br>
   *         The representation is e.g. "4x5" or  "4x5,10nz"<br>
   * <br>
   *         
   */
  public String dim_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_dim___SWIG_1(swigCPtr, this);
  }

  /**
   *  Get the shape<br>
   * <br>
   *         
   */
  public SWIGTYPE_p_std__pairT_long_long_long_long_t size_() {
    return new SWIGTYPE_p_std__pairT_long_long_long_long_t(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_size___SWIG_0(swigCPtr, this), true);
  }

  /**
   *  Get the size along a particular dimensions<br>
   * <br>
   *         
   */
  public long size_(long axis) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_size___SWIG_1(swigCPtr, this, axis);
  }

  /**
   *  Check if the sparsity is empty, i.e. if one of the dimensions is zero<br>
   * <br>
   * (or optionally both dimensions)<br>
   * <br>
   *         
   */
  public boolean is_empty_(boolean both) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_empty___SWIG_0(swigCPtr, this, both);
  }

  /**
   *  Check if the sparsity is empty, i.e. if one of the dimensions is zero<br>
   * <br>
   * (or optionally both dimensions)<br>
   * <br>
   *         
   */
  public boolean is_empty_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_empty___SWIG_1(swigCPtr, this);
  }

  /**
   *  Check if the matrix expression is dense<br>
   * <br>
   *         
   */
  public boolean is_dense_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_dense_(swigCPtr, this);
  }

  /**
   *  Check if the matrix expression is scalar<br>
   * <br>
   *         
   */
  public boolean is_scalar_(boolean scalar_and_dense) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_scalar___SWIG_0(swigCPtr, this, scalar_and_dense);
  }

  /**
   *  Check if the matrix expression is scalar<br>
   * <br>
   *         
   */
  public boolean is_scalar_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_scalar___SWIG_1(swigCPtr, this);
  }

  /**
   *  Check if the matrix expression is square<br>
   * <br>
   *         
   */
  public boolean is_square() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_square(swigCPtr, this);
  }

  /**
   *  Check if the matrix is a row or column vector<br>
   * <br>
   *         
   */
  public boolean is_vector_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_vector_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is a row vector (i.e. size1()==1)<br>
   * <br>
   *         
   */
  public boolean is_row_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_row_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is a column vector (i.e. size2()==1)<br>
   * <br>
   *         
   */
  public boolean is_column_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_column_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is upper triangular<br>
   * <br>
   *         
   */
  public boolean is_triu_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_triu_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is lower triangular<br>
   * <br>
   *         
   */
  public boolean is_tril_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_is_tril_(swigCPtr, this);
  }

  /**
   * Get the sparsity pattern. See the Sparsity class for details.<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt get_row() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_row(swigCPtr, this), true);
  }

  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt get_colind() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_get_colind(swigCPtr, this), true);
  }

  public SWIGTYPE_p_long_long row_() {throw new UnsupportedOperationException();}

  public SWIGTYPE_p_long_long colind_() {throw new UnsupportedOperationException();}

  public long row_(long el) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_row___SWIG_1(swigCPtr, this, el);
  }

  public long colind_(long col) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DM_colind___SWIG_1(swigCPtr, this, col);
  }

}
