/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 *  Class representing a Slice<br>
 * <br>
 * Note that Python or Octave do not need to use this class.<br>
 * They can just use slicing utility from the host language ( M[0:6]  in Python, M(1:7) )<br>
 * <br>
 *       
 */
public class Slice {
  private final long swigCPtr;

  public Slice(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, Slice::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected Slice(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(Slice obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_Slice(swigCPtr);
}

  /**
   *  start value: negative values will get added to length
   */
  public long getStart() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_start_get(swigCPtr, this);
  }

  /**
   *  stop value: use std::numeric_limits&lt;casadi_int&gt;::max() to indicate unboundedness
   */
  public long getStop() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_stop_get(swigCPtr, this);
  }

  public long getStep() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_step_get(swigCPtr, this);
  }

  /**
   *  Default constructor - all elements
   */
  public Slice() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_0(), true);
  }

  /**
   *  A single element (explicit to avoid ambiguity with IM overload
   */
  public Slice(long i) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_1(i), true);
  }

  /**
   *  A slice
   */
  public Slice(long start, long stop, long step) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_2(start, stop, step), true);
  }

  /**
   *  A slice
   */
  public Slice(long start, long stop) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_3(start, stop), true);
  }

  public Slice(int start, int stop, int step) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_4(start, stop, step), true);
  }

  public Slice(int start, int stop) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_5(start, stop), true);
  }

  public Slice(int start, long stop, int step) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_6(start, stop, step), true);
  }

  public Slice(int start, long stop) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_7(start, stop), true);
  }

  public Slice(long start, int stop, int step) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_8(start, stop, step), true);
  }

  public Slice(long start, int stop) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_9(start, stop), true);
  }

  /**
   *  Get a vector of indices
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt all() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_all__SWIG_0(swigCPtr, this), true);
  }

  /**
   *  Get a vector of indices
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt all(long len, boolean ind1) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_all__SWIG_1(swigCPtr, this, len, ind1), true);
  }

  /**
   *  Get a vector of indices
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt all(long len) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_all__SWIG_2(swigCPtr, this, len), true);
  }

  /**
   *  Get a vector of indices (nested slice)
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt all(de.dhbw.rahmlab.casadi.impl.casadi.Slice outer, long len) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_all__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(outer), outer, len), true);
  }

  /**
   *  Get number of elements
   */
  public long size() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_size(swigCPtr, this);
  }

  /**
   *  Check if slice is empty
   */
  public boolean is_empty() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_is_empty(swigCPtr, this);
  }

  /**
   *  Is the slice a scalar
   */
  public boolean is_scalar(long len) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_is_scalar(swigCPtr, this, len);
  }

  /**
   *  Get scalar (if is_scalar)
   */
  public long scalar(long len) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_scalar(swigCPtr, this, len);
  }

  /**
   *  Apply concrete length
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Slice apply(long len, boolean ind1) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Slice(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_apply__SWIG_0(swigCPtr, this, len, ind1), true);
  }

  /**
   *  Apply concrete length
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Slice apply(long len) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Slice(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_apply__SWIG_1(swigCPtr, this, len), true);
  }

  /**
   *  Get name of the class
   */
  public String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_type_name(swigCPtr, this);
  }

  /**
   *  Print a description of the object
   */
  public void disp(SWIGTYPE_p_std__ostream stream, boolean more) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_disp__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream), more);
  }

  /**
   *  Print a description of the object
   */
  public void disp(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_disp__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  /**
   *  Get string representation
   */
  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_toString__SWIG_0(swigCPtr, this, more);
  }

  /**
   *  Get string representation
   */
  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_toString__SWIG_1(swigCPtr, this);
  }

  /**
   *  Obtain information 
   */
  public de.dhbw.rahmlab.casadi.impl.std.Dict info() {
    return new de.dhbw.rahmlab.casadi.impl.std.Dict(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_info(swigCPtr, this), true);
  }

  /**
   *  Serialize an object<br>
   * <br>
   *         
   */
  public void serialize(SWIGTYPE_p_casadi__SerializingStream s) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_serialize(swigCPtr, this, SWIGTYPE_p_casadi__SerializingStream.getCPtr(s));
  }

  /**
   *  Deserialize without type information<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.Slice deserialize(SWIGTYPE_p_casadi__DeserializingStream s) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Slice(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Slice_deserialize(SWIGTYPE_p_casadi__DeserializingStream.getCPtr(s)), true);
  }

  public Slice(de.dhbw.rahmlab.casadi.impl.casadi.Slice other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Slice__SWIG_10(de.dhbw.rahmlab.casadi.impl.casadi.Slice.getCPtr(other), other), true);
  }

}
