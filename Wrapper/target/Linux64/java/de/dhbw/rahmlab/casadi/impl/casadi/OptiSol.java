/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 *  A simplified interface for NLP modeling/solving<br>
 * <br>
 *       This class offers a view with solution retrieval facilities<br>
 *       The API is guaranteed to be stable.<br>
 * <br>
 * <br>
 *       2017<br>
 *       @author Joris Gillis, Erik Lambrechts<br>
 * <br>
 *     
 */
public class OptiSol {
  private final long swigCPtr;

  public OptiSol(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, OptiSol::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected OptiSol(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(OptiSol obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_OptiSol(swigCPtr);
}

  public String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_type_name(swigCPtr, this);
  }

  public void disp(SWIGTYPE_p_std__ostream stream, boolean more) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_disp__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream), more);
  }

  public void disp(SWIGTYPE_p_std__ostream stream) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_disp__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_toString__SWIG_0(swigCPtr, this, more);
  }

  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_toString__SWIG_1(swigCPtr, this);
  }

  /**
   *  Obtain value of expression at the current value<br>
   * <br>
   * In regular mode, teh current value is the converged solution<br>
   * In debug mode, the value can be non-converged<br>
   * <br>
   * @param values Optional assignment expressions (e.g. x==3)<br>
   *            to overrule the current value
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM value(de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.std.StdVectorMX values) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorMX.getCPtr(values), values), true);
  }

  /**
   *  Obtain value of expression at the current value<br>
   * <br>
   * In regular mode, teh current value is the converged solution<br>
   * In debug mode, the value can be non-converged<br>
   * <br>
   * 
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.DM value(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DM value(de.dhbw.rahmlab.casadi.impl.casadi.DM x, de.dhbw.rahmlab.casadi.impl.std.StdVectorMX values) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorMX.getCPtr(values), values), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DM value(de.dhbw.rahmlab.casadi.impl.casadi.DM x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.DM.getCPtr(x), x), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DM value(de.dhbw.rahmlab.casadi.impl.casadi.SX x, de.dhbw.rahmlab.casadi.impl.std.StdVectorMX values) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value__SWIG_4(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.SX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.std.StdVectorMX.getCPtr(values), values), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.DM value(de.dhbw.rahmlab.casadi.impl.casadi.SX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.DM(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value__SWIG_5(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.SX.getCPtr(x), x), true);
  }

  /**
   *  <br>
   *  get assignment expressions for the optimal solution
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX value_variables() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value_variables(swigCPtr, this), true);
  }

  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX value_parameters() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_value_parameters(swigCPtr, this), true);
  }

  /**
   *  Get statistics<br>
   * <br>
   * nlpsol stats are passed as-is.<br>
   * No stability can be guaranteed about this part of the API<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.std.Dict stats() {
    return new de.dhbw.rahmlab.casadi.impl.std.Dict(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_stats(swigCPtr, this), true);
  }

  public de.dhbw.rahmlab.casadi.impl.casadi.Opti opti() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Opti(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiSol_opti(swigCPtr, this), true);
  }

  public OptiSol(de.dhbw.rahmlab.casadi.impl.casadi.OptiSol other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_OptiSol__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.OptiSol.getCPtr(other), other), true);
  }

}
