/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 *  Matrix base class<br>
 * <br>
 *       This is a common base class for MX and Matrix&lt;&gt;, introducing a uniform syntax and implementing<br>
 *       common functionality using the curiously recurring template pattern (CRTP) idiom.<br>
 * <br>
 * <br>
 *       The class is designed with the idea that "everything is a matrix",<br>
 *       that is, also scalars and vectors.<br>
 * <br>
 *       This philosophy makes it easy to use and to interface in particularly<br>
 *       with Python and Matlab/Octave.<br>
 * <br>
 * <br>
 *       The syntax tries to stay as close as possible to the ublas syntax<br>
 *       when it comes to vector/matrix operations.<br>
 * <br>
 * <br>
 *       Index starts with 0.<br>
 * <br>
 *       Index vec happens as follows: (rr, cc) -&gt; k = rr+cc*size1()<br>
 * <br>
 *       Vectors are column vectors.<br>
 * <br>
 * <br>
 *       The storage format is Compressed Column Storage (CCS),<br>
 *       similar to that used for sparse matrices in Matlab, <br>
 * <br>
 *       but unlike this format, we do allow for elements to be structurally non-zero<br>
 *       but numerically zero.<br>
 * <br>
 * <br>
 *       The sparsity pattern, which is reference counted and cached,<br>
 *       can be accessed with Sparsity&amp; sparsity()<br>
 * <br>
 * <br>
 *       @author Joel Andersson<br>
 *       2012<br>
 * <br>
 *       
 */
public class MxGenericMatrix implements IMxGenericMatrix {
  private final long swigCPtr;

  public MxGenericMatrix(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, MxGenericMatrix::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected MxGenericMatrix(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(MxGenericMatrix obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_MxGenericMatrix(swigCPtr);
}

  public long IMxGenericMatrix_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_IMxGenericMatrix_GetInterfaceCPtr(swigCPtr);
  }

  /**
   *  Get the number of (structural) non-zero elements<br>
   * <br>
   *         
   */
  public long nnz_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_nnz_(swigCPtr, this);
  }

  /**
   *  Get the number of non-zeros in the lower triangular half<br>
   * <br>
   *         
   */
  public long nnz_lower_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_nnz_lower_(swigCPtr, this);
  }

  /**
   *  Get the number of non-zeros in the upper triangular half<br>
   * <br>
   *         
   */
  public long nnz_upper_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_nnz_upper_(swigCPtr, this);
  }

  /**
   *  Get get the number of non-zeros on the diagonal<br>
   * <br>
   *         
   */
  public long nnz_diag() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_nnz_diag(swigCPtr, this);
  }

  /**
   *  Get the number of elements<br>
   * <br>
   *         
   */
  public long numel_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_numel_(swigCPtr, this);
  }

  /**
   *  Get the first dimension (i.e. number of rows)<br>
   * <br>
   *         
   */
  public long size1_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_size1_(swigCPtr, this);
  }

  /**
   *  Get the number of rows, Octave-style syntax<br>
   * <br>
   *         
   */
  public long rows() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_rows(swigCPtr, this);
  }

  /**
   *  Get the second dimension (i.e. number of columns)<br>
   * <br>
   *         
   */
  public long size2_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_size2_(swigCPtr, this);
  }

  /**
   *  Get the number of columns, Octave-style syntax<br>
   * <br>
   *         
   */
  public long columns() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_columns(swigCPtr, this);
  }

  /**
   *  Get string representation of dimensions.<br>
   * <br>
   *         The representation is e.g. "4x5" or  "4x5,10nz"<br>
   * <br>
   *         
   */
  public String dim_(boolean with_nz) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_dim___SWIG_0(swigCPtr, this, with_nz);
  }

  /**
   *  Get string representation of dimensions.<br>
   * <br>
   *         The representation is e.g. "4x5" or  "4x5,10nz"<br>
   * <br>
   *         
   */
  public String dim_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_dim___SWIG_1(swigCPtr, this);
  }

  /**
   *  Get the shape<br>
   * <br>
   *         
   */
  public SWIGTYPE_p_std__pairT_long_long_long_long_t size_() {
    return new SWIGTYPE_p_std__pairT_long_long_long_long_t(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_size___SWIG_0(swigCPtr, this), true);
  }

  /**
   *  Get the size along a particular dimensions<br>
   * <br>
   *         
   */
  public long size_(long axis) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_size___SWIG_1(swigCPtr, this, axis);
  }

  /**
   *  Check if the sparsity is empty, i.e. if one of the dimensions is zero<br>
   * <br>
   * (or optionally both dimensions)<br>
   * <br>
   *         
   */
  public boolean is_empty_(boolean both) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_empty___SWIG_0(swigCPtr, this, both);
  }

  /**
   *  Check if the sparsity is empty, i.e. if one of the dimensions is zero<br>
   * <br>
   * (or optionally both dimensions)<br>
   * <br>
   *         
   */
  public boolean is_empty_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_empty___SWIG_1(swigCPtr, this);
  }

  /**
   *  Check if the matrix expression is dense<br>
   * <br>
   *         
   */
  public boolean is_dense_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_dense_(swigCPtr, this);
  }

  /**
   *  Check if the matrix expression is scalar<br>
   * <br>
   *         
   */
  public boolean is_scalar_(boolean scalar_and_dense) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_scalar___SWIG_0(swigCPtr, this, scalar_and_dense);
  }

  /**
   *  Check if the matrix expression is scalar<br>
   * <br>
   *         
   */
  public boolean is_scalar_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_scalar___SWIG_1(swigCPtr, this);
  }

  /**
   *  Check if the matrix expression is square<br>
   * <br>
   *         
   */
  public boolean is_square() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_square(swigCPtr, this);
  }

  /**
   *  Check if the matrix is a row or column vector<br>
   * <br>
   *         
   */
  public boolean is_vector_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_vector_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is a row vector (i.e. size1()==1)<br>
   * <br>
   *         
   */
  public boolean is_row_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_row_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is a column vector (i.e. size2()==1)<br>
   * <br>
   *         
   */
  public boolean is_column_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_column_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is upper triangular<br>
   * <br>
   *         
   */
  public boolean is_triu_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_triu_(swigCPtr, this);
  }

  /**
   *  Check if the matrix is lower triangular<br>
   * <br>
   *         
   */
  public boolean is_tril_() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_tril_(swigCPtr, this);
  }

  /**
   * Get the sparsity pattern. See the Sparsity class for details.<br>
   * <br>
   *         
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt get_row() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_get_row(swigCPtr, this), true);
  }

  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt get_colind() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_get_colind(swigCPtr, this), true);
  }

  public SWIGTYPE_p_long_long row_() {throw new UnsupportedOperationException();}

  public SWIGTYPE_p_long_long colind_() {throw new UnsupportedOperationException();}

  public long row_(long el) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_row___SWIG_1(swigCPtr, this, el);
  }

  public long colind_(long col) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_colind___SWIG_1(swigCPtr, this, col);
  }

  /**
   *  Conditional comment: CLUTTER  <br>
   *  Functions called by friend functions defined here
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX interp1d(de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble x, de.dhbw.rahmlab.casadi.impl.casadi.MX v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble xq, String mode, boolean equidistant) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_interp1d(de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(v), v, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(xq), xq, mode, equidistant), true);
  }

  public static long sprank(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sprank(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x);
  }

  public static long norm_0_mul(de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX y) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_norm_0_mul(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(y), y);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX tril(de.dhbw.rahmlab.casadi.impl.casadi.MX x, boolean includeDiagonal) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_tril__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, includeDiagonal), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX tril(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_tril__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX triu(de.dhbw.rahmlab.casadi.impl.casadi.MX x, boolean includeDiagonal) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_triu__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, includeDiagonal), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX triu(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_triu__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX sumsqr(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sumsqr(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX linspace(de.dhbw.rahmlab.casadi.impl.casadi.MX a, de.dhbw.rahmlab.casadi.impl.casadi.MX b, long nsteps) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_linspace(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(b), b, nsteps), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX cross(de.dhbw.rahmlab.casadi.impl.casadi.MX a, de.dhbw.rahmlab.casadi.impl.casadi.MX b, long dim) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_cross__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(b), b, dim), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX cross(de.dhbw.rahmlab.casadi.impl.casadi.MX a, de.dhbw.rahmlab.casadi.impl.casadi.MX b) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_cross__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(a), a, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(b), b), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX skew(de.dhbw.rahmlab.casadi.impl.casadi.MX a) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_skew(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(a), a), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX inv_skew(de.dhbw.rahmlab.casadi.impl.casadi.MX a) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_inv_skew(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(a), a), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX tril2symm(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_tril2symm(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX triu2symm(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_triu2symm(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX repsum(de.dhbw.rahmlab.casadi.impl.casadi.MX x, long n, long m) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_repsum__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, n, m), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX repsum(de.dhbw.rahmlab.casadi.impl.casadi.MX x, long n) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_repsum__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, n), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX diff(de.dhbw.rahmlab.casadi.impl.casadi.MX x, long n, long axis) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_diff__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, n, axis), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX diff(de.dhbw.rahmlab.casadi.impl.casadi.MX x, long n) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_diff__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, n), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX diff(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_diff__SWIG_2(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  public static boolean is_linear(de.dhbw.rahmlab.casadi.impl.casadi.MX expr, de.dhbw.rahmlab.casadi.impl.casadi.MX var) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_linear(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(var), var);
  }

  public static boolean is_quadratic(de.dhbw.rahmlab.casadi.impl.casadi.MX expr, de.dhbw.rahmlab.casadi.impl.casadi.MX var) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_is_quadratic(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(var), var);
  }

  public static void quadratic_coeff(de.dhbw.rahmlab.casadi.impl.casadi.MX expr, de.dhbw.rahmlab.casadi.impl.casadi.MX var, de.dhbw.rahmlab.casadi.impl.casadi.MX A, de.dhbw.rahmlab.casadi.impl.casadi.MX b, de.dhbw.rahmlab.casadi.impl.casadi.MX c, boolean check) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_quadratic_coeff(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(var), var, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(b), b, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(c), c, check);
  }

  public static void linear_coeff(de.dhbw.rahmlab.casadi.impl.casadi.MX expr, de.dhbw.rahmlab.casadi.impl.casadi.MX var, de.dhbw.rahmlab.casadi.impl.casadi.MX A, de.dhbw.rahmlab.casadi.impl.casadi.MX b, boolean check) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_linear_coeff(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(var), var, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(b), b, check);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX bilin(de.dhbw.rahmlab.casadi.impl.casadi.MX A, de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_bilin(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX rank1(de.dhbw.rahmlab.casadi.impl.casadi.MX A, de.dhbw.rahmlab.casadi.impl.casadi.MX alpha, de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_rank1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(A), A, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(alpha), alpha, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX logsumexp(de.dhbw.rahmlab.casadi.impl.casadi.MX x) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_logsumexp(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x), true);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined here
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX jtimes_(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg, de.dhbw.rahmlab.casadi.impl.casadi.MX v, boolean tr, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_jtimes___SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(v), v, tr, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined here
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX jtimes_(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg, de.dhbw.rahmlab.casadi.impl.casadi.MX v, boolean tr) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_jtimes___SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(v), v, tr), true);
  }

  /**
   * <br>
   * <br>
   *  Functions called by friend functions defined here
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX jtimes_(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg, de.dhbw.rahmlab.casadi.impl.casadi.MX v) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_jtimes___SWIG_2(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(v), v), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX gradient(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_gradient__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX gradient(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_gradient__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX tangent(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_tangent__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX tangent(de.dhbw.rahmlab.casadi.impl.casadi.MX ex, de.dhbw.rahmlab.casadi.impl.casadi.MX arg) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_tangent__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(ex), ex, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(arg), arg), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX linearize(de.dhbw.rahmlab.casadi.impl.casadi.MX f, de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX x0, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_linearize__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x0), x0, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX linearize(de.dhbw.rahmlab.casadi.impl.casadi.MX f, de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX x0) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_linearize__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(f), f, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x0), x0), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX mpower(de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_mpower(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(y), y), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX soc(de.dhbw.rahmlab.casadi.impl.casadi.MX x, de.dhbw.rahmlab.casadi.impl.casadi.MX y) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_soc(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(x), x, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(y), y), true);
  }

  /**
   * <br>
   * Create an nrow-by-ncol symbolic primitive<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX sym(String name, long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_0(name, nrow, ncol), true);
  }

  /**
   * <br>
   * Create an nrow-by-ncol symbolic primitive<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX sym(String name, long nrow) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_1(name, nrow), true);
  }

  /**
   * <br>
   * Create an nrow-by-ncol symbolic primitive<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX sym(String name) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_2(name), true);
  }

  /**
   *  Construct a symbolic primitive with given dimensions<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX sym(String name, SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_3(name, SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   *  Create symbolic primitive with a given sparsity pattern<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX sym(String name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_4(name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  /**
   *  Create a vector of length p with with matrices<br>
   * <br>
   * with symbolic primitives of given sparsity<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorMX sym(String name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, long p) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_5(name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, p), true);
  }

  /**
   *  Create a vector of length p with nrow-by-ncol symbolic primitives<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorMX sym(String name, long nrow, long ncol, long p) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_6(name, nrow, ncol, p), true);
  }

  /**
   *  Create a vector of length r of vectors of length p with<br>
   * <br>
   * symbolic primitives with given sparsity<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorMX sym(String name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp, long p, long r) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_7(name, de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp, p, r), true);
  }

  /**
   *  Create a vector of length r of vectors of length p<br>
   * <br>
   * with nrow-by-ncol symbolic primitives<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorMX sym(String name, long nrow, long ncol, long p, long r) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_sym__SWIG_8(name, nrow, ncol, p, r), true);
  }

  /**
   * <br>
   * Create a dense matrix or a matrix with specified sparsity with all entries zero<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX zeros(long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_zeros__SWIG_0(nrow, ncol), true);
  }

  /**
   * <br>
   * Create a dense matrix or a matrix with specified sparsity with all entries zero<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX zeros(long nrow) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_zeros__SWIG_1(nrow), true);
  }

  /**
   * <br>
   * Create a dense matrix or a matrix with specified sparsity with all entries zero<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX zeros() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_zeros__SWIG_2(), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX zeros(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_zeros__SWIG_3(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX zeros(SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_zeros__SWIG_4(SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  /**
   * <br>
   * Create a dense matrix or a matrix with specified sparsity with all entries one<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX ones(long nrow, long ncol) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_ones__SWIG_0(nrow, ncol), true);
  }

  /**
   * <br>
   * Create a dense matrix or a matrix with specified sparsity with all entries one<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX ones(long nrow) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_ones__SWIG_1(nrow), true);
  }

  /**
   * <br>
   * Create a dense matrix or a matrix with specified sparsity with all entries one<br>
   * <br>
   *         
   */
  public static de.dhbw.rahmlab.casadi.impl.casadi.MX ones() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_ones__SWIG_2(), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX ones(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity sp) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_ones__SWIG_3(de.dhbw.rahmlab.casadi.impl.casadi.Sparsity.getCPtr(sp), sp), true);
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.MX ones(SWIGTYPE_p_std__pairT_long_long_long_long_t rc) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxGenericMatrix_ones__SWIG_4(SWIGTYPE_p_std__pairT_long_long_long_long_t.getCPtr(rc)), true);
  }

  public MxGenericMatrix() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_MxGenericMatrix__SWIG_0(), true);
  }

  public MxGenericMatrix(de.dhbw.rahmlab.casadi.impl.casadi.IMxGenericMatrix other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_MxGenericMatrix__SWIG_1(other.IMxGenericMatrix_GetInterfaceCPtr(), other), true);
  }

}
