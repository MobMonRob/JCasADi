/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

public class CasadiMeta {
  private final long swigCPtr;

  public CasadiMeta(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, CasadiMeta::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected CasadiMeta(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(CasadiMeta obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_CasadiMeta(swigCPtr);
}

  public static String version() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_version();
  }

  public static String git_revision() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_git_revision();
  }

  public static String git_describe() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_git_describe();
  }

  public static String feature_list() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_feature_list();
  }

  public static String build_type() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_build_type();
  }

  public static String compiler_id() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_compiler_id();
  }

  public static String compiler() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_compiler();
  }

  public static String compiler_flags() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_compiler_flags();
  }

  public static String modules() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_modules();
  }

  public static String plugins() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_plugins();
  }

  public static String install_prefix() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_install_prefix();
  }

  public static String shared_library_prefix() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_shared_library_prefix();
  }

  public static String shared_library_suffix() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_shared_library_suffix();
  }

  public static String object_file_suffix() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_CasadiMeta_object_file_suffix();
  }

  public CasadiMeta(de.dhbw.rahmlab.casadi.impl.casadi.CasadiMeta other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_CasadiMeta(de.dhbw.rahmlab.casadi.impl.casadi.CasadiMeta.getCPtr(other), other), true);
  }

}
