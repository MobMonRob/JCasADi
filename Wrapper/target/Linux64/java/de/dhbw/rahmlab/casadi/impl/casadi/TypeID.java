/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

/**
 *  Types of options<br>
 * <br>
 *       
 */
public final class TypeID {
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_NULL = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_NULL");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_BOOL = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_BOOL");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_INT = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_INT");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_DOUBLE = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_DOUBLE");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_STRING = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_STRING");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_INTVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_INTVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_INTVECTORVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_INTVECTORVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_BOOLVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_BOOLVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_DOUBLEVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_DOUBLEVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_DOUBLEVECTORVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_DOUBLEVECTORVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_STRINGVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_STRINGVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_DICT = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_DICT");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_FUNCTION = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_FUNCTION");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_FUNCTIONVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_FUNCTIONVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_VOIDPTR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_VOIDPTR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_UNKNOWN = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_UNKNOWN");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_STRINGVECTORVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_STRINGVECTORVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_DICTVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_DICTVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_VECTORVECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_VECTORVECTOR");
  public final static de.dhbw.rahmlab.casadi.impl.casadi.TypeID OT_VECTOR = new de.dhbw.rahmlab.casadi.impl.casadi.TypeID("OT_VECTOR");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static TypeID swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + TypeID.class + " with value " + swigValue);
  }

  private TypeID(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private TypeID(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private TypeID(String swigName, TypeID swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static TypeID[] swigValues = { OT_NULL, OT_BOOL, OT_INT, OT_DOUBLE, OT_STRING, OT_INTVECTOR, OT_INTVECTORVECTOR, OT_BOOLVECTOR, OT_DOUBLEVECTOR, OT_DOUBLEVECTORVECTOR, OT_STRINGVECTOR, OT_DICT, OT_FUNCTION, OT_FUNCTIONVECTOR, OT_VOIDPTR, OT_UNKNOWN, OT_STRINGVECTORVECTOR, OT_DICTVECTOR, OT_VECTORVECTOR, OT_VECTOR };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

