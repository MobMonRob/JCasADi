/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 *  A symbolic representation of a differential-algebraic equations model<br>
 * <br>
 *     <h3>Variables:  </h3><br>
 *     {@literal 
    t:      independent variable (usually time)
    c:      constants
    p:      parameters
    d:      dependent parameters (time independent)
    u:      controls
    w:      dependent variables  (time dependent)
    x:      differential states
    z:      algebraic variables
    q:      quadrature states
    y:      outputs
    }<br>
 * <br>
 *     <h3>Equations:  </h3><br>
 *     {@literal 
    differential equations: \dot{x} ==  ode(...)
    algebraic equations:          0 ==  alg(...)
    quadrature equations:   \dot{q} == quad(...)
    dependent parameters:         d == ddef(d_prev,p)
    dependent variables:          w == wdef(w_prev,x,z,u,p,t)
    output equations:             y == ydef(...)
    initial equations:     init_lhs == init_rhs(...)
    events:      when when_cond < 0: when_lhs := when_rhs
    }<br>
 * <br>
 *     2012-2021<br>
 *     @author Joel Andersson<br>
 * <br>
 *     
 */
public class DaeBuilder implements ISharedObject {
  private final long swigCPtr;

  public DaeBuilder(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, DaeBuilder::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected DaeBuilder(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(DaeBuilder obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_DaeBuilder(swigCPtr);
}

  public long ISharedObject_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_ISharedObject_GetInterfaceCPtr(swigCPtr);
  }

  /**
   *  Readable name of the class
   */
  public String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_type_name(swigCPtr, this);
  }

  /**
   *  Default constructor
   */
  public DaeBuilder() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DaeBuilder__SWIG_0(), true);
  }

  /**
   *  Construct a DaeBuilder instance
   */
  public DaeBuilder(String name, String path, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DaeBuilder__SWIG_1(name, path, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   *  Construct a DaeBuilder instance
   */
  public DaeBuilder(String name, String path) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DaeBuilder__SWIG_2(name, path), true);
  }

  /**
   *  Construct a DaeBuilder instance
   */
  public DaeBuilder(String name) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DaeBuilder__SWIG_3(name), true);
  }

  /**
   *  Name of instance<br>
   * <br>
   *       
   */
  public String name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_name(swigCPtr, this);
  }

  /**
   * Expression for independent variable (usually time)<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX time() {
	final long cPtr = de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_time(swigCPtr, this);
	if (cPtr == 0) return null;
	// false here indicates no ownership transfer to java
	de.dhbw.rahmlab.casadi.impl.casadi.MX proxy = new de.dhbw.rahmlab.casadi.impl.casadi.MX(cPtr, false);
	// public void extend(final Object toBeExtendedLifeTime, final Object extendedToLifeTime)
	LIFE_TIME_EXTENDER.extend(this, proxy);
	return proxy;
}

  /**
   *  Independent variable (usually time)<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString t_new() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_t_new(swigCPtr, this), true);
  }

  /**
   *  Differential states<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString x() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_x(swigCPtr, this), true);
  }

  /**
   *  Outputs 
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString y() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_y(swigCPtr, this), true);
  }

  /**
   *  Ordinary differential equations (ODE)<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX ode() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_ode(swigCPtr, this), true);
  }

  /**
   *  Algebraic variables<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString z() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_z(swigCPtr, this), true);
  }

  /**
   *  Algebraic equations<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX alg() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_alg(swigCPtr, this), true);
  }

  /**
   *  Quadrature states<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString q() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_q(swigCPtr, this), true);
  }

  /**
   *  Quadrature equations<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX quad() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_quad(swigCPtr, this), true);
  }

  /**
   *  Zero-crossing functions<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX zero() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_zero(swigCPtr, this), true);
  }

  /**
   *  Definitions of output variables<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX ydef() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_ydef(swigCPtr, this), true);
  }

  /**
   *  Set all output variables<br>
   * <br>
   *       
   */
  public void set_y(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_y(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name);
  }

  /**
   *  Get all rate variables<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString rate() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_rate(swigCPtr, this), true);
  }

  /**
   *  Set rate variables<br>
   * <br>
   *       
   */
  public void set_rate(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_rate(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name);
  }

  /**
   *  Free controls<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString u() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_u(swigCPtr, this), true);
  }

  /**
   *  Parameters<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString p() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_p(swigCPtr, this), true);
  }

  /**
   *  Named constants<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString c() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_c(swigCPtr, this), true);
  }

  /**
   *  Definitions of named constants<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX cdef() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_cdef(swigCPtr, this), true);
  }

  /**
   *  Dependent parameters<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString d() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_d(swigCPtr, this), true);
  }

  /**
   *  Definitions of dependent parameters<br>
   * <br>
   * Interdependencies are allowed but must be non-cyclic.<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX ddef() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_ddef(swigCPtr, this), true);
  }

  /**
   *  Dependent variables<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString w() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_w(swigCPtr, this), true);
  }

  /**
   *  Dependent variables and corresponding definitions<br>
   * <br>
   * Interdependencies are allowed but must be non-cyclic.<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX wdef() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_wdef(swigCPtr, this), true);
  }

  /**
   *  Initial conditions, left-hand-side<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX init_lhs() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_init_lhs(swigCPtr, this), true);
  }

  /**
   *  Initial conditions, right-hand-side<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorMX init_rhs() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_init_rhs(swigCPtr, this), true);
  }

  /**
   *  Model structure: outputs<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString outputs() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_outputs(swigCPtr, this), true);
  }

  /**
   *  Model structure: derivatives<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString derivatives() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_derivatives(swigCPtr, this), true);
  }

  /**
   *  Model structure: initial unknowns<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString initial_unknowns() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_initial_unknowns(swigCPtr, this), true);
  }

  /**
   * Is there a time variable?<br>
   * <br>
   *       
   */
  public boolean has_t() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_has_t(swigCPtr, this);
  }

  /**
   *  Is there a rate output?<br>
   * <br>
   *       
   */
  public boolean has_rate() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_has_rate(swigCPtr, this);
  }

  /**
   *  Differential states<br>
   * <br>
   *       
   */
  public long nx() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nx(swigCPtr, this);
  }

  /**
   *  Algebraic variables<br>
   * <br>
   *       
   */
  public long nz() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nz(swigCPtr, this);
  }

  /**
   *  Quadrature states<br>
   * <br>
   *       
   */
  public long nq() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nq(swigCPtr, this);
  }

  /**
   *  Zero-crossing functions<br>
   * <br>
   *       
   */
  public long nzero() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nzero(swigCPtr, this);
  }

  /**
   *  Output variables<br>
   * <br>
   *       
   */
  public long ny() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_ny(swigCPtr, this);
  }

  /**
   *  Free controls<br>
   * <br>
   *       
   */
  public long nu() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nu(swigCPtr, this);
  }

  /**
   *  Parameters<br>
   * <br>
   *       
   */
  public long np() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_np(swigCPtr, this);
  }

  /**
   *  Named constants<br>
   * <br>
   *       
   */
  public long nc() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nc(swigCPtr, this);
  }

  /**
   *  Dependent parameters<br>
   * <br>
   *       
   */
  public long nd() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nd(swigCPtr, this);
  }

  /**
   *  Dependent variables<br>
   * <br>
   *       
   */
  public long nw() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nw(swigCPtr, this);
  }

  /**
   * <br>
   * <br>
   *  Add a new model variable
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX add(String name, String causality, String variability, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_0(swigCPtr, this, name, causality, variability, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   * <br>
   * <br>
   *  Add a new model variable
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX add(String name, String causality, String variability) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_1(swigCPtr, this, name, causality, variability), true);
  }

  /**
   *  Add a new model variable, default variability
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX add(String name, String causality, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_2(swigCPtr, this, name, causality, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   *  Add a new model variable, default variability
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX add(String name, String causality) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_3(swigCPtr, this, name, causality), true);
  }

  /**
   *  Add a new model variable, default variability and causality
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX add(String name, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_4(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   *  Add a new model variable, default variability and causality
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX add(String name) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_5(swigCPtr, this, name), true);
  }

  /**
   *  Add a new model variable, symbolic expression already available
   */
  public void add(String name, String causality, String variability, de.dhbw.rahmlab.casadi.impl.casadi.MX expr, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_6(swigCPtr, this, name, causality, variability, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(expr), expr, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts);
  }

  /**
   *  Add a new model variable, symbolic expression already available
   */
  public void add(String name, String causality, String variability, de.dhbw.rahmlab.casadi.impl.casadi.MX expr) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add__SWIG_7(swigCPtr, this, name, causality, variability, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(expr), expr);
  }

  /**
   *  Add a simple equation
   */
  public void eq(de.dhbw.rahmlab.casadi.impl.casadi.MX lhs, de.dhbw.rahmlab.casadi.impl.casadi.MX rhs, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_eq__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(lhs), lhs, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(rhs), rhs, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts);
  }

  /**
   *  Add a simple equation
   */
  public void eq(de.dhbw.rahmlab.casadi.impl.casadi.MX lhs, de.dhbw.rahmlab.casadi.impl.casadi.MX rhs) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_eq__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(lhs), lhs, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(rhs), rhs);
  }

  /**
   *  Add when equations
   */
  public void when(de.dhbw.rahmlab.casadi.impl.casadi.MX cond, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString eqs, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_when__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(cond), cond, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(eqs), eqs, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts);
  }

  /**
   *  Add when equations
   */
  public void when(de.dhbw.rahmlab.casadi.impl.casadi.MX cond, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString eqs) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_when__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(cond), cond, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(eqs), eqs);
  }

  /**
   *  Assignment inside a when-equation or if-else equation
   */
  public String assign(String name, de.dhbw.rahmlab.casadi.impl.casadi.MX val) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_assign(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(val), val);
  }

  /**
   *  Reinitialize a state inside when-equations
   */
  public String reinit(String name, de.dhbw.rahmlab.casadi.impl.casadi.MX val) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_reinit(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(val), val);
  }

  /**
   *  Specify the initial equation for a variable
   */
  public void set_init(String name, de.dhbw.rahmlab.casadi.impl.casadi.MX init_rhs) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_init(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(init_rhs), init_rhs);
  }

  /**
   *  Check if dimensions match
   */
  public void sanity_check() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_sanity_check(swigCPtr, this);
  }

  /**
   * <br>
   *  Reorder variables in a category
   */
  public void reorder(String cat, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString v) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_reorder(swigCPtr, this, cat, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(v), v);
  }

  /**
   * <br>
   *  Eliminate all dependent parameters
   */
  public void eliminate(String cat) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_eliminate(swigCPtr, this, cat);
  }

  /**
   *  Sort dependent parameters
   */
  public void sort(String cat) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_sort(swigCPtr, this, cat);
  }

  /**
   *  Lift problem formulation by extracting shared subexpressions
   */
  public void lift(boolean lift_shared, boolean lift_calls) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_lift__SWIG_0(swigCPtr, this, lift_shared, lift_calls);
  }

  /**
   *  Lift problem formulation by extracting shared subexpressions
   */
  public void lift(boolean lift_shared) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_lift__SWIG_1(swigCPtr, this, lift_shared);
  }

  /**
   *  Lift problem formulation by extracting shared subexpressions
   */
  public void lift() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_lift__SWIG_2(swigCPtr, this);
  }

  /**
   *  Prune unused controls
   */
  public void prune(boolean prune_p, boolean prune_u) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_prune__SWIG_0(swigCPtr, this, prune_p, prune_u);
  }

  /**
   *  Prune unused controls
   */
  public void prune(boolean prune_p) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_prune__SWIG_1(swigCPtr, this, prune_p);
  }

  /**
   *  Prune unused controls
   */
  public void prune() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_prune__SWIG_2(swigCPtr, this);
  }

  /**
   *  Identify iteration variables and residual equations using naming convention
   */
  public void tear() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_tear(swigCPtr, this);
  }

  /**
   * <br>
   * <br>
   *  Add a function from loaded expressions
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function add_fun(String name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString res, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add_fun__SWIG_0(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(res), res, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   * <br>
   * <br>
   *  Add a function from loaded expressions
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function add_fun(String name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString res) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add_fun__SWIG_1(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(arg), arg, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(res), res), true);
  }

  /**
   *  Add an already existing function
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function add_fun(de.dhbw.rahmlab.casadi.impl.casadi.Function f) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add_fun__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.Function.getCPtr(f), f), true);
  }

  /**
   *  Add an external function
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function add_fun(String name, de.dhbw.rahmlab.casadi.impl.casadi.Importer compiler, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add_fun__SWIG_3(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.casadi.Importer.getCPtr(compiler), compiler, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   *  Add an external function
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function add_fun(String name, de.dhbw.rahmlab.casadi.impl.casadi.Importer compiler) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add_fun__SWIG_4(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.casadi.Importer.getCPtr(compiler), compiler), true);
  }

  /**
   *  Does a particular function already exist?
   */
  public boolean has_fun(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_has_fun(swigCPtr, this, name);
  }

  /**
   *  Get function by name
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function fun(String name) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_fun__SWIG_0(swigCPtr, this, name), true);
  }

  /**
   *  Get all functions
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiFunction fun() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiFunction(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_fun__SWIG_1(swigCPtr, this), true);
  }

  /**
   *  Collect embedded functions from the expression graph
   */
  public void gather_fun(long max_depth) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_gather_fun__SWIG_0(swigCPtr, this, max_depth);
  }

  /**
   *  Collect embedded functions from the expression graph
   */
  public void gather_fun() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_gather_fun__SWIG_1(swigCPtr, this);
  }

  /**
   * <br>
   * <br>
   *  Import existing problem from FMI/XML
   */
  public void parse_fmi(String filename) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_parse_fmi(swigCPtr, this, filename);
  }

  /**
   *  Does the FMU provide support for analytic derivatives
   */
  public boolean provides_directional_derivatives() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_provides_directional_derivatives(swigCPtr, this);
  }

  /**
   *  Does the FMU provide support for analytic derivatives (FMI 2 naming)
   */
  public boolean provides_directional_derivative() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_provides_directional_derivative(swigCPtr, this);
  }

  /**
   *  Import problem description from FMI or XML
   */
  public void load_fmi_description(String filename) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_load_fmi_description(swigCPtr, this, filename);
  }

  /**
   *  Export instance into an FMU
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString export_fmu(de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_export_fmu__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   *  Export instance into an FMU
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString export_fmu() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_export_fmu__SWIG_1(swigCPtr, this), true);
  }

  /**
   *  Add a named linear combination of output expressions
   */
  public void add_lc(String name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString f_out) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_add_lc(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(f_out), f_out);
  }

  /**
   *  Construct a function object, legacy syntax
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create(String fname, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_out, boolean sx, boolean lifted_calls) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_0(swigCPtr, this, fname, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_in), name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_out), name_out, sx, lifted_calls), true);
  }

  /**
   *  Construct a function object, legacy syntax
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create(String fname, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_out, boolean sx) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_1(swigCPtr, this, fname, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_in), name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_out), name_out, sx), true);
  }

  /**
   *  Construct a function object, names provided<br>
   * <br>
   *     @param name    Name assigned to the resulting function object<br>
   *     @param name_in   Names of all the inputs<br>
   *     @param name_out  Names of all the outputs<br>
   *     @param opts    Optional settings<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create(String name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_out, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_2(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_in), name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_out), name_out, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   *  Construct a function object, names provided<br>
   * <br>
   *     @param name    Name assigned to the resulting function object<br>
   *     @param name_in   Names of all the inputs<br>
   *     @param name_out  Names of all the outputs<br>
   *     <br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create(String name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name_out) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_3(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_in), name_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name_out), name_out), true);
  }

  /**
   * Create a function with standard integrator DAE signature<br>
   * <br>
   *     @param opts    Optional settings<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create(String fname, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_4(swigCPtr, this, fname, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  /**
   * Create a function with standard integrator DAE signature<br>
   * <br>
   *     <br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create(String fname) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_5(swigCPtr, this, fname), true);
  }

  /**
   *  Create a function with standard integrator DAE signature, default naming<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function create() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_create__SWIG_6(swigCPtr, this), true);
  }

  /**
   *  Construct a function for evaluating dependent parameters
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function dependent_fun(String fname, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString s_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString s_out) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_dependent_fun(swigCPtr, this, fname, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(s_in), s_in, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(s_out), s_out), true);
  }

  /**
   *  Construct a function describing transition at a specific events
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function transition(String fname, long index) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_transition__SWIG_0(swigCPtr, this, fname, index), true);
  }

  /**
   *  Construct a function describing transition at any events
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function transition(String fname) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_transition__SWIG_1(swigCPtr, this, fname), true);
  }

  /**
   *  Construct an event transition function, default naming
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function transition() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_transition__SWIG_2(swigCPtr, this), true);
  }

  /**
   * <br>
   *  Get variable expression by name
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX var(String name) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_var(swigCPtr, this, name), true);
  }

  /**
   * <br>
   *  Get the time derivative of model variables
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString der(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_der__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   * <br>
   *  Differentiate an expression with respect to time
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX der(de.dhbw.rahmlab.casadi.impl.casadi.MX v) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_der__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(v), v), true);
  }

  /**
   * <br>
   *  Get the pre-variables of model variables
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString pre(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_pre__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Get the pre-expression given variable expression
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX pre(de.dhbw.rahmlab.casadi.impl.casadi.MX v) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_pre__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(v), v), true);
  }

  /**
   *  Does a variable have a binding equation?
   */
  public boolean has_beq(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_has_beq(swigCPtr, this, name);
  }

  /**
   *  Get the binding equation for a variable
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.MX beq(String name) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.MX(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_beq(swigCPtr, this, name), true);
  }

  /**
   * <br>
   *  Get/set value reference
   */
  public long value_reference(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_value_reference(swigCPtr, this, name);
  }

  public void set_value_reference(String name, long val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_value_reference(swigCPtr, this, name, val);
  }

  /**
   * <br>
   * <br>
   *  Get/set description
   */
  public String description(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_description(swigCPtr, this, name);
  }

  public void set_description(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_description(swigCPtr, this, name, val);
  }

  /**
   * <br>
   * <br>
   *  Get/set the type
   */
  public String type(String name, long fmi_version) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_type__SWIG_0(swigCPtr, this, name, fmi_version);
  }

  /**
   * <br>
   * <br>
   *  Get/set the type
   */
  public String type(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_type__SWIG_1(swigCPtr, this, name);
  }

  public void set_type(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_type(swigCPtr, this, name, val);
  }

  /**
   * <br>
   *  Get the causality
   */
  public String causality(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_causality(swigCPtr, this, name);
  }

  /**
   *  Set the causality, if permitted<br>
   * <br>
   *   The following changes are permitted:<br>
   * For controls 'u' (variability 'continuous', causality 'input'), free parameters 'p'<br>
   *     (variability 'tunable', causality 'parameter') and fixed parameters 'c' (variability<br>
   *     'fixed', causality 'parameter'), causality can only be changed indirectly, by updating<br>
   *     the variability<br>
   * Add or remove an output 'y' by setting the causality to 'output' or 'local',<br>
   *     respectively<br>
   * <br>
   *     No other changes are permitted.<br>
   * <br>
   *       
   */
  public void set_causality(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_causality(swigCPtr, this, name, val);
  }

  /**
   *  Get the variability
   */
  public String variability(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_variability(swigCPtr, this, name);
  }

  /**
   *  Set the variability, if permitted<br>
   * <br>
   *   For controls 'u' (variability 'continuous', causality 'input'), free parameters 'p'<br>
   *   (variability 'tunable', causality 'parameter') and fixed parameters 'c'<br>
   *   (variability 'fixed', causality 'parameter'), update variability in<br>
   *   order to change the category. Causality is updated accordingly.<br>
   * <br>
   *   Other changes are not permitted<br>
   * <br>
   *       
   */
  public void set_variability(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_variability(swigCPtr, this, name, val);
  }

  /**
   *  Get the variable category
   */
  public String category(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_category(swigCPtr, this, name);
  }

  /**
   *  Set the variable category, if permitted<br>
   * <br>
   *   The following changes are permitted:<br>
   * Controls 'u' can be changed to/from tunable parameters 'p' or fixed parameters 'c'<br>
   * Differential states that do not appear in the right-hand-sides can be changed between<br>
   *     regular states 'x' and quadrature states 'q'<br>
   * <br>
   *     Other changes are not permitted. Causality and variability is updated accordingly.<br>
   * <br>
   *       
   */
  public void set_category(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_category(swigCPtr, this, name, val);
  }

  /**
   * <br>
   *  Get/set the initial property
   */
  public String initial(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_initial(swigCPtr, this, name);
  }

  public void set_initial(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_initial(swigCPtr, this, name, val);
  }

  /**
   * <br>
   * <br>
   *  Get/set the unit
   */
  public String unit(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_unit(swigCPtr, this, name);
  }

  public void set_unit(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_unit(swigCPtr, this, name, val);
  }

  /**
   * <br>
   * <br>
   *  Get/set the display unit
   */
  public String display_unit(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_display_unit(swigCPtr, this, name);
  }

  public void set_display_unit(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_display_unit(swigCPtr, this, name, val);
  }

  /**
   * <br>
   *  Get the number of elements of a variable
   */
  public long numel(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_numel(swigCPtr, this, name);
  }

  /**
   *  Get the dimensions of a variable
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt dimension(String name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiInt(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_dimension(swigCPtr, this, name), true);
  }

  /**
   *  Get the start time
   */
  public double start_time() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_start_time(swigCPtr, this);
  }

  /**
   *  Set the start time
   */
  public void set_start_time(double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_start_time(swigCPtr, this, val);
  }

  /**
   *  Get the stop time
   */
  public double stop_time() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_stop_time(swigCPtr, this);
  }

  /**
   *  Set the stop time
   */
  public void set_stop_time(double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_stop_time(swigCPtr, this, val);
  }

  /**
   *  Get the tolerance
   */
  public double tolerance() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_tolerance(swigCPtr, this);
  }

  /**
   *  Set the tolerance
   */
  public void set_tolerance(double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_tolerance(swigCPtr, this, val);
  }

  /**
   *  Get the step size
   */
  public double step_size() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_step_size(swigCPtr, this);
  }

  /**
   *  Set the step size
   */
  public void set_step_size(double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_step_size(swigCPtr, this, val);
  }

  /**
   *  Get the time derivative of model variables, single variable
   */
  public String der(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_der__SWIG_3(swigCPtr, this, name);
  }

  /**
   *  Get the pre-variables of model variables
   */
  public String pre(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_pre__SWIG_2(swigCPtr, this, name);
  }

  /**
   *  Get an attribute, single variable
   */
  public double attribute(String a, String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_attribute__SWIG_0(swigCPtr, this, a, name);
  }

  /**
   *  Set an attribute, single variable
   */
  public void set_attribute(String a, String name, double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_attribute__SWIG_0(swigCPtr, this, a, name, val);
  }

  /**
   *  Get the lower bound, single variable
   */
  public double min(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_min__SWIG_0(swigCPtr, this, name);
  }

  /**
   *  Set the lower bound, single variable
   */
  public void set_min(String name, double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_min__SWIG_0(swigCPtr, this, name, val);
  }

  /**
   *  Get the upper bound, single variable
   */
  public double max(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_max__SWIG_0(swigCPtr, this, name);
  }

  /**
   *  Set the upper bound, single variable
   */
  public void set_max(String name, double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_max__SWIG_0(swigCPtr, this, name, val);
  }

  /**
   *  Get the nominal value, single variable
   */
  public double nominal(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nominal__SWIG_0(swigCPtr, this, name);
  }

  /**
   *  Set the nominal value, single variable
   */
  public void set_nominal(String name, double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_nominal__SWIG_0(swigCPtr, this, name, val);
  }

  /**
   *  Get the start attribute, single variable
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble start(String name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_start__SWIG_0(swigCPtr, this, name), true);
  }

  /**
   *  Set the start attribute, single variable
   */
  public void set_start(String name, double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_start__SWIG_0(swigCPtr, this, name, val);
  }

  /**
   *  Set the start attribute, vector argument
   */
  public void set_start(String name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_start__SWIG_1(swigCPtr, this, name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  public void reset() {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_reset(swigCPtr, this);
  }

  public void set(String name, double val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set__SWIG_0(swigCPtr, this, name, val);
  }

  public void set(String name, String val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set__SWIG_1(swigCPtr, this, name, val);
  }

  /**
   *  Evaluate the values for a set of variables at the initial time, single value
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.GenericType get(String name) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.GenericType(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_get__SWIG_0(swigCPtr, this, name), true);
  }

  /**
   *  Get an attribute
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble attribute(String a, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_attribute__SWIG_1(swigCPtr, this, a, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Set an attribute
   */
  public void set_attribute(String a, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_attribute__SWIG_1(swigCPtr, this, a, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  /**
   *  Get the lower bound
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble min(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_min__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Set the lower bound
   */
  public void set_min(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_min__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  /**
   *  Get the upper bound
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble max(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_max__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Set the upper bound
   */
  public void set_max(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_max__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  /**
   *  Get the nominal value
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble nominal(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_nominal__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Set the nominal value
   */
  public void set_nominal(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_nominal__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  /**
   *  Get the start attribute
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble start(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_start__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Set the start attribute
   */
  public void set_start(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set_start__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  /**
   *  Set the current value
   */
  public void set(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set__SWIG_2(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorDouble.getCPtr(val), val);
  }

  /**
   *  Set the current value (string)
   */
  public void set(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString val) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_set__SWIG_3(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(val), val);
  }

  /**
   *  Evaluate the values for a set of variables at the initial time
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiGenericType get(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString name) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorCasadiGenericType(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_get__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(name), name), true);
  }

  /**
   *  Check if a particular variable exists
   */
  public boolean has(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_has(swigCPtr, this, name);
  }

  /**
   *  Get a list of all variables
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString all() {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_all__SWIG_0(swigCPtr, this), true);
  }

  /**
   *  Get a list of all variables of a particular category
   */
  public de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString all(String cat) {
    return new de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_all__SWIG_1(swigCPtr, this, cat), true);
  }

  /**
   *  Get the (cached) oracle, SX or MX
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function oracle(boolean sx, boolean elim_w, boolean lifted_calls) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_oracle__SWIG_0(swigCPtr, this, sx, elim_w, lifted_calls), true);
  }

  /**
   *  Get the (cached) oracle, SX or MX
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function oracle(boolean sx, boolean elim_w) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_oracle__SWIG_1(swigCPtr, this, sx, elim_w), true);
  }

  /**
   *  Get the (cached) oracle, SX or MX
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function oracle(boolean sx) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_oracle__SWIG_2(swigCPtr, this, sx), true);
  }

  /**
   *  Get the (cached) oracle, SX or MX
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Function oracle() {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Function(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_oracle__SWIG_3(swigCPtr, this), true);
  }

  /**
   *  Get Jacobian sparsity<br>
   * <br>
   *       
   */
  public de.dhbw.rahmlab.casadi.impl.casadi.Sparsity jac_sparsity(de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString onames, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString inames) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Sparsity(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_jac_sparsity(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(onames), onames, de.dhbw.rahmlab.casadi.impl.std.StdVectorStdString.getCPtr(inames), inames), true);
  }

  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_toString__SWIG_0(swigCPtr, this, more);
  }

  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_DaeBuilder_toString__SWIG_1(swigCPtr, this);
  }

  public DaeBuilder(de.dhbw.rahmlab.casadi.impl.casadi.DaeBuilder other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_DaeBuilder__SWIG_4(de.dhbw.rahmlab.casadi.impl.casadi.DaeBuilder.getCPtr(other), other), true);
  }

}
