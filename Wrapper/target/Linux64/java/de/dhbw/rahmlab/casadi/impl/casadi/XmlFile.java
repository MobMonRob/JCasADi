/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 *  XML parser<br>
 * <br>
 *       Can be used for parsing XML files into CasADi data structures.<br>
 * <br>
 *       @author Joel Andersson<br>
 *       2014<br>
 * <br>
 *       
 */
public class XmlFile implements ISharedObject {
  private final long swigCPtr;

  public XmlFile(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, XmlFile::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected XmlFile(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(XmlFile obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_XmlFile(swigCPtr);
}

  public long ISharedObject_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_XmlFile_ISharedObject_GetInterfaceCPtr(swigCPtr);
  }

  /**
   *  Get type name<br>
   * <br>
   *         
   */
  public static String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_XmlFile_type_name();
  }

  public XmlFile() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_XmlFile__SWIG_0(), true);
  }

  public XmlFile(String name) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_XmlFile__SWIG_1(name), true);
  }

  /**
   *  Load a plugin dynamically
   */
  public static void load_plugin(String name) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_XmlFile_load_plugin(name);
  }

  /**
   *  Get solver specific documentation
   */
  public static String doc(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_XmlFile_doc(name);
  }

  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_XmlFile_toString__SWIG_0(swigCPtr, this, more);
  }

  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_XmlFile_toString__SWIG_1(swigCPtr, this);
  }

  public XmlFile(de.dhbw.rahmlab.casadi.impl.casadi.XmlFile other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_XmlFile__SWIG_2(de.dhbw.rahmlab.casadi.impl.casadi.XmlFile.getCPtr(other), other), true);
  }

}
