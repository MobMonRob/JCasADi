/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

/**
 *  SubMatrix class for Matrix<br>
 *       SubMatrix is the return type for operator() of the Matrix class, it allows access to the value as well as changing the parent object<br>
 *       @author Joel Andersson<br>
 *       2011-2014
 */
public class MxSubMatrix extends de.dhbw.rahmlab.casadi.impl.casadi.MX {
  private final long swigCPtr;

  public MxSubMatrix(long cPtr, boolean cMemoryOwn) {
    super(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxSubMatrix_SWIGUpcast(cPtr), cMemoryOwn, cPtr, MxSubMatrix::delete);
    this.swigCPtr = cPtr;
  }
  
  public static long getCPtr(MxSubMatrix obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_MxSubMatrix(swigCPtr);
}

  /**
   *  Constructor
   */
  public MxSubMatrix(de.dhbw.rahmlab.casadi.impl.casadi.MX mat, int i, int j) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_MxSubMatrix__SWIG_0(de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(mat), mat, i, j), true);
  }

  /**
   *  Default copy constructor
   */
  public MxSubMatrix(de.dhbw.rahmlab.casadi.impl.casadi.MxSubMatrix y) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_MxSubMatrix__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.MxSubMatrix.getCPtr(y), y), true);
  }

  public void assign(de.dhbw.rahmlab.casadi.impl.casadi.MxSubMatrix other) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxSubMatrix_assign__SWIG_0(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MxSubMatrix.getCPtr(other), other);
  }

  public void assign(de.dhbw.rahmlab.casadi.impl.casadi.MX other) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_MxSubMatrix_assign__SWIG_1(swigCPtr, this, de.dhbw.rahmlab.casadi.impl.casadi.MX.getCPtr(other), other);
  }

	/**
	 * Shows the value if MX is a 1x1 Matrix. Works with MX created via MX.sym(). Be cautious: Will resolve MX dependencies as far as it can. The output is basically MX transformed to SX.
	 */
	@Override
	public String toString() {
		if ((super.columns() != 1) || (super.rows() != 1)) {
			return super.toString();
		}

		var freeMX = de.dhbw.rahmlab.casadi.impl.casadi.MX.symvar(this);

		var freeSX = freeMX.stream().map(freeVar -> de.dhbw.rahmlab.casadi.impl.casadi.SxGenericMatrix.sym(freeVar.name(), freeVar.rows(), freeVar.columns())).toList();

		var inSym = new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(freeMX);
		var outSym = new de.dhbw.rahmlab.casadi.impl.std.StdVectorMX(java.util.List.of(this));

		// Allows MX created with MX.sym();
		var options = new de.dhbw.rahmlab.casadi.impl.std.Dict();
		options.put("allow_free", new de.dhbw.rahmlab.casadi.impl.casadi.GenericType(true));

		var f = new de.dhbw.rahmlab.casadi.impl.casadi.Function("f", inSym, outSym, options);

		var inVal = new de.dhbw.rahmlab.casadi.impl.std.StdVectorSX(freeSX);
		var outVal = new de.dhbw.rahmlab.casadi.impl.std.StdVectorSX();

		f.call(inVal, outVal);
		return outVal.get(0).toString();
	}

}
