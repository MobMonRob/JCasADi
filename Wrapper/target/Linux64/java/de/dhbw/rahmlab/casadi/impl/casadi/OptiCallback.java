/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

public class OptiCallback {
  private final long swigCPtr;

  public OptiCallback(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, OptiCallback::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected OptiCallback(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(OptiCallback obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_OptiCallback(swigCPtr);
}

  public OptiCallback() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_OptiCallback__SWIG_0(), true);
  }

  public OptiCallback(de.dhbw.rahmlab.casadi.impl.casadi.OptiCallback obj) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_OptiCallback__SWIG_1(de.dhbw.rahmlab.casadi.impl.casadi.OptiCallback.getCPtr(obj), obj), true);
  }

  public void call(long i) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_OptiCallback_call(swigCPtr, this, i);
  }

}
