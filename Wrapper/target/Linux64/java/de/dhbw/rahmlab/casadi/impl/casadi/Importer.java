/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.casadi.impl.casadi;

import de.dhbw.rahmlab.casadi.impl.*;
import static de.dhbw.rahmlab.casadi.impl.core__.*;
import java.util.function.LongConsumer;
import static de.dhbw.rahmlab.casadi.implUtil.WrapUtil.*;

public class Importer implements ISharedObject {
  private final long swigCPtr;

  public Importer(long cPtr, boolean cMemoryOwn) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, cPtr, Importer::delete);
  	}
  }

  /**
  * <pre>
  * In C++, deleting a pointer twice is undefined behavior!
  * In C++, deleting an object polymorphically is undefined behavior if the base class does not declare it's constructor as virtual!
  * Using this baseclass constructor for subtypes prevents that.
  * </pre>
  */
  protected Importer(long cPtr, boolean cMemoryOwn, long subtype_cPtr, LongConsumer subtype_deleteFunction) {
    this.swigCPtr = cPtr;
	  if (cMemoryOwn) {
		  REGISTER_DELETION(this, subtype_cPtr, subtype_deleteFunction);
	  }
  }

  public static long getCPtr(Importer obj) {
    return obj.swigCPtr;
  }

  private static void delete(long swigCPtr) {
  de.dhbw.rahmlab.casadi.impl.core__JNI.delete_casadi_Importer(swigCPtr);
}

  public long ISharedObject_GetInterfaceCPtr() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_ISharedObject_GetInterfaceCPtr(swigCPtr);
  }

  public static String type_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_type_name();
  }

  public Importer() {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Importer__SWIG_0(), true);
  }

  public Importer(String name, String compiler, de.dhbw.rahmlab.casadi.impl.std.Dict opts) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Importer__SWIG_1(name, compiler, de.dhbw.rahmlab.casadi.impl.std.Dict.getCPtr(opts), opts), true);
  }

  public Importer(String name, String compiler) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Importer__SWIG_2(name, compiler), true);
  }

  public static boolean test_cast(SWIGTYPE_p_SharedObjectInternal ptr) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_test_cast(SWIGTYPE_p_SharedObjectInternal.getCPtr(ptr));
  }

  public static boolean has_plugin(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_has_plugin(name);
  }

  public static void load_plugin(String name) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_load_plugin(name);
  }

  public static String doc(String name) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_doc(name);
  }

  public String plugin_name() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_plugin_name(swigCPtr, this);
  }

  public boolean has_function(String symname) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_has_function(swigCPtr, this, symname);
  }

  public boolean has_meta(String cmd, long ind) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_has_meta__SWIG_0(swigCPtr, this, cmd, ind);
  }

  public boolean has_meta(String cmd) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_has_meta__SWIG_1(swigCPtr, this, cmd);
  }

  public String get_meta(String cmd, long ind) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_get_meta__SWIG_0(swigCPtr, this, cmd, ind);
  }

  public String get_meta(String cmd) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_get_meta__SWIG_1(swigCPtr, this, cmd);
  }

  public boolean inlined(String symname) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_inlined(swigCPtr, this, symname);
  }

  public String body(String symname) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_body(swigCPtr, this, symname);
  }

  public String library() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_library(swigCPtr, this);
  }

  public void serialize(SWIGTYPE_p_casadi__SerializingStream s) {
    de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_serialize(swigCPtr, this, SWIGTYPE_p_casadi__SerializingStream.getCPtr(s));
  }

  public static de.dhbw.rahmlab.casadi.impl.casadi.Importer deserialize(SWIGTYPE_p_casadi__DeserializingStream s) {
    return new de.dhbw.rahmlab.casadi.impl.casadi.Importer(de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_deserialize(SWIGTYPE_p_casadi__DeserializingStream.getCPtr(s)), true);
  }

  public String toString(boolean more) {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_toString__SWIG_0(swigCPtr, this, more);
  }

  public String toString() {
    return de.dhbw.rahmlab.casadi.impl.core__JNI.casadi_Importer_toString__SWIG_1(swigCPtr, this);
  }

  public Importer(de.dhbw.rahmlab.casadi.impl.casadi.Importer other) {
    this(de.dhbw.rahmlab.casadi.impl.core__JNI.new_casadi_Importer__SWIG_3(de.dhbw.rahmlab.casadi.impl.casadi.Importer.getCPtr(other), other), true);
  }

}
